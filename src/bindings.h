// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* /home/jbennett/src/zoneminder/build/generated/bindings.h
   Generated by wsdl2h 2.8.117 from http://www.onvif.org/onvif/ver10/events/wsdl/event.wsdl and typemap.dat
   2022-05-18 22:50:12 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on /home/jbennett/src/zoneminder/build/generated/bindings.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER typemap variable:                                               *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef std::string xsd__NCName;

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef std::string xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef std::string xsd__token;

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class tev__Capabilities;

class tev__EventBrokerConfig;

class _tev__GetServiceCapabilities;

class _tev__GetServiceCapabilitiesResponse;

class _tev__CreatePullPointSubscription;

class _tev__CreatePullPointSubscriptionResponse;

class _tev__PullMessages;

class _tev__PullMessagesResponse;

class _tev__PullMessagesFaultResponse;

class _tev__Seek;

class _tev__SeekResponse;

class _tev__SetSynchronizationPoint;

class _tev__SetSynchronizationPointResponse;

class _tev__GetEventProperties;

class _tev__GetEventPropertiesResponse;

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":ChangedOnly.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

class _tev__AddEventBroker;

class _tev__AddEventBrokerResponse;

class _tev__DeleteEventBroker;

class _tev__DeleteEventBrokerResponse;

class _tev__GetEventBrokers;

class _tev__GetEventBrokersResponse;

class wsrfr__ResourceUnknownFaultType;

class wsrfr__ResourceUnavailableFaultType;

class wsrfbf__BaseFaultType;

class wsnt__QueryExpressionType;

class wsnt__TopicExpressionType;

class wsnt__FilterType;

class wsnt__SubscriptionPolicyType;

class wsnt__NotificationMessageHolderType;

class wsnt__SubscribeCreationFailedFaultType;

class wsnt__InvalidFilterFaultType;

class wsnt__TopicExpressionDialectUnknownFaultType;

class wsnt__InvalidTopicExpressionFaultType;

class wsnt__TopicNotSupportedFaultType;

class wsnt__MultipleTopicsSpecifiedFaultType;

class wsnt__InvalidProducerPropertiesExpressionFaultType;

class wsnt__InvalidMessageContentExpressionFaultType;

class wsnt__UnrecognizedPolicyRequestFaultType;

class wsnt__UnsupportedPolicyRequestFaultType;

class wsnt__NotifyMessageNotSupportedFaultType;

class wsnt__UnacceptableInitialTerminationTimeFaultType;

class wsnt__NoCurrentMessageOnTopicFaultType;

class wsnt__UnableToGetMessagesFaultType;

class wsnt__UnableToDestroyPullPointFaultType;

class wsnt__UnableToCreatePullPointFaultType;

class wsnt__UnacceptableTerminationTimeFaultType;

class wsnt__UnableToDestroySubscriptionFaultType;

class wsnt__PauseFailedFaultType;

class wsnt__ResumeFailedFaultType;

class _wsnt__NotificationProducerRP;

class _wsnt__SubscriptionManagerRP;

class _wsnt__Notify;

class _wsnt__UseRaw;

class _wsnt__Subscribe;

class _wsnt__SubscribeResponse;

class _wsnt__GetCurrentMessage;

class _wsnt__GetCurrentMessageResponse;

class _wsnt__GetMessages;

class _wsnt__GetMessagesResponse;

class _wsnt__DestroyPullPoint;

class _wsnt__DestroyPullPointResponse;

class _wsnt__CreatePullPoint;

class _wsnt__CreatePullPointResponse;

class _wsnt__Renew;

class _wsnt__RenewResponse;

class _wsnt__Unsubscribe;

class _wsnt__UnsubscribeResponse;

class _wsnt__PauseSubscription;

class _wsnt__PauseSubscriptionResponse;

class _wsnt__ResumeSubscription;

class _wsnt__ResumeSubscriptionResponse;

class wstop__Documentation;

class wstop__ExtensibleDocumented;

class wstop__QueryExpressionType;

class wstop__TopicNamespaceType;

class wstop__TopicType;

class wstop__TopicSetType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef std::string wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/events/wsdl":EventBrokerProtocol is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/events/wsdl":ConnectionStatus is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is not used and was removed

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
/// @note class tev__Capabilities operations:
/// - tev__Capabilities* soap_new_tev__Capabilities(soap*) allocate and default initialize
/// - tev__Capabilities* soap_new_tev__Capabilities(soap*, int num) allocate and default initialize an array
/// - tev__Capabilities* soap_new_req_tev__Capabilities(soap*, ...) allocate, set required members
/// - tev__Capabilities* soap_new_set_tev__Capabilities(soap*, ...) allocate, set all public members
/// - tev__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tev__Capabilities(soap*, tev__Capabilities*) deserialize from a stream
/// - int soap_write_tev__Capabilities(soap*, tev__Capabilities*) serialize to a stream
/// - tev__Capabilities* tev__Capabilities::soap_dup(soap*) returns deep copy of tev__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tev__Capabilities::soap_del() deep deletes tev__Capabilities data members, use only after tev__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tev__Capabilities::soap_type() returns SOAP_TYPE_tev__Capabilities or derived type identifier
class tev__Capabilities {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSSubscriptionPolicySupport" of type xs:boolean.
  @ bool*                                WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPullPointSupport" of type xs:boolean.
  @ bool*                                WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
  @ bool*                                WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxNotificationProducers" of type xs:int.
  @ int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPullPoints" of type xs:int.
  @ int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PersistentNotificationStorage" of type xs:boolean.
  @ bool*                                PersistentNotificationStorage  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A space separated list of supported event broker protocols as defined by the tev:EventBrokerProtocol datatype.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EventBrokerProtocols" of type xs:string.
  @ std::string*                         EventBrokerProtocols           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of event broker configurations that can be added to the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxEventBrokers" of type xs:int.
  @ int*                                 MaxEventBrokers                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/events/wsdl":EventBrokerConfig is a complexType.
///
/// @note class tev__EventBrokerConfig operations:
/// - tev__EventBrokerConfig* soap_new_tev__EventBrokerConfig(soap*) allocate and default initialize
/// - tev__EventBrokerConfig* soap_new_tev__EventBrokerConfig(soap*, int num) allocate and default initialize an array
/// - tev__EventBrokerConfig* soap_new_req_tev__EventBrokerConfig(soap*, ...) allocate, set required members
/// - tev__EventBrokerConfig* soap_new_set_tev__EventBrokerConfig(soap*, ...) allocate, set all public members
/// - tev__EventBrokerConfig::soap_default(soap*) default initialize members
/// - int soap_read_tev__EventBrokerConfig(soap*, tev__EventBrokerConfig*) deserialize from a stream
/// - int soap_write_tev__EventBrokerConfig(soap*, tev__EventBrokerConfig*) serialize to a stream
/// - tev__EventBrokerConfig* tev__EventBrokerConfig::soap_dup(soap*) returns deep copy of tev__EventBrokerConfig, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tev__EventBrokerConfig::soap_del() deep deletes tev__EventBrokerConfig data members, use only after tev__EventBrokerConfig::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tev__EventBrokerConfig::soap_type() returns SOAP_TYPE_tev__EventBrokerConfig or derived type identifier
class tev__EventBrokerConfig {
 public:
/// <PRE><BLOCKQUOTE>
///   Event broker address in the format "scheme://host:port[/resource]". The supported schemes shall be returned by the EventBrokerProtocols capability. The resource part of the URL is only valid when using websocket. The Address must be unique.
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type xs:anyURI.
  xsd__anyURI                          Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix that will be prepended to all topics before they are published. This is used to make published topics unique for each device. TopicPrefix is not allowed to be empty.
/// </BLOCKQUOTE></PRE>
///
/// Element "TopicPrefix" of type xs:string.
  std::string                          TopicPrefix                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   User name for the event broker.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
  std::string*                         UserName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for the event broker. Password shall not be included when returned with GetEventBrokers.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
  std::string*                         Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional certificate ID in the key store pointing to a client certificate to be used for authenticating the device at the message broker.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
  xsd__token*                          CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Concrete Topic Expression to select specific topics to publish.
/// </BLOCKQUOTE></PRE>
///
/// Element "PublishFilter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
  wsnt__FilterType*                    PublishFilter                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Quality of service level to use when publishing. This defines the guarantee of delivery for a specific message: 0 = At most once, 1 = At least once, 2 = Exactly once.
/// </BLOCKQUOTE></PRE>
///
/// Element "QoS" of type xs:int.
  int*                                 QoS                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current connection status (see tev:ConnectionStatus for possible values).
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:string.
  std::string*                         Status                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The ID of the certification path validation policy used to validate the broker certificate. In case encryption is used but no validation policy is specified, the device shall not validate the broker certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertPathValidationPolicyID" of type xs:string.
  std::string*                         CertPathValidationPolicyID     0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tev__GetServiceCapabilities operations:
/// - _tev__GetServiceCapabilities* soap_new__tev__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tev__GetServiceCapabilities* soap_new__tev__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tev__GetServiceCapabilities* soap_new_req__tev__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tev__GetServiceCapabilities* soap_new_set__tev__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tev__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetServiceCapabilities(soap*, _tev__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilities(soap*, _tev__GetServiceCapabilities*) serialize to a stream
/// - _tev__GetServiceCapabilities* _tev__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tev__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetServiceCapabilities::soap_del() deep deletes _tev__GetServiceCapabilities data members, use only after _tev__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tev__GetServiceCapabilities or derived type identifier
class _tev__GetServiceCapabilities {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tev__GetServiceCapabilitiesResponse operations:
/// - _tev__GetServiceCapabilitiesResponse* soap_new__tev__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tev__GetServiceCapabilitiesResponse* soap_new__tev__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tev__GetServiceCapabilitiesResponse* soap_new_req__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tev__GetServiceCapabilitiesResponse* soap_new_set__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tev__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetServiceCapabilitiesResponse(soap*, _tev__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilitiesResponse(soap*, _tev__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tev__GetServiceCapabilitiesResponse* _tev__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tev__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetServiceCapabilitiesResponse::soap_del() deep deletes _tev__GetServiceCapabilitiesResponse data members, use only after _tev__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tev__GetServiceCapabilitiesResponse or derived type identifier
class _tev__GetServiceCapabilitiesResponse {
 public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
  tev__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
/// @note class _tev__CreatePullPointSubscription operations:
/// - _tev__CreatePullPointSubscription* soap_new__tev__CreatePullPointSubscription(soap*) allocate and default initialize
/// - _tev__CreatePullPointSubscription* soap_new__tev__CreatePullPointSubscription(soap*, int num) allocate and default initialize an array
/// - _tev__CreatePullPointSubscription* soap_new_req__tev__CreatePullPointSubscription(soap*, ...) allocate, set required members
/// - _tev__CreatePullPointSubscription* soap_new_set__tev__CreatePullPointSubscription(soap*, ...) allocate, set all public members
/// - _tev__CreatePullPointSubscription::soap_default(soap*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription(soap*, _tev__CreatePullPointSubscription*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription(soap*, _tev__CreatePullPointSubscription*) serialize to a stream
/// - _tev__CreatePullPointSubscription* _tev__CreatePullPointSubscription::soap_dup(soap*) returns deep copy of _tev__CreatePullPointSubscription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__CreatePullPointSubscription::soap_del() deep deletes _tev__CreatePullPointSubscription data members, use only after _tev__CreatePullPointSubscription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__CreatePullPointSubscription::soap_type() returns SOAP_TYPE__tev__CreatePullPointSubscription or derived type identifier
class _tev__CreatePullPointSubscription {
 public:
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
///
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
  wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
///
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
  wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
///
/// @note class _tev__CreatePullPointSubscription_SubscriptionPolicy operations:
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*) allocate and default initialize
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, int num) allocate and default initialize an array
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new_req__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* soap_new_set__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) serialize to a stream
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy* _tev__CreatePullPointSubscription_SubscriptionPolicy::soap_dup(soap*) returns deep copy of _tev__CreatePullPointSubscription_SubscriptionPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__CreatePullPointSubscription_SubscriptionPolicy::soap_del() deep deletes _tev__CreatePullPointSubscription_SubscriptionPolicy data members, use only after _tev__CreatePullPointSubscription_SubscriptionPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__CreatePullPointSubscription_SubscriptionPolicy::soap_type() returns SOAP_TYPE__tev__CreatePullPointSubscription_SubscriptionPolicy or derived type identifier
  class _tev__CreatePullPointSubscription_SubscriptionPolicy {
   public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
/// @note class _tev__CreatePullPointSubscriptionResponse operations:
/// - _tev__CreatePullPointSubscriptionResponse* soap_new__tev__CreatePullPointSubscriptionResponse(soap*) allocate and default initialize
/// - _tev__CreatePullPointSubscriptionResponse* soap_new__tev__CreatePullPointSubscriptionResponse(soap*, int num) allocate and default initialize an array
/// - _tev__CreatePullPointSubscriptionResponse* soap_new_req__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set required members
/// - _tev__CreatePullPointSubscriptionResponse* soap_new_set__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set all public members
/// - _tev__CreatePullPointSubscriptionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__CreatePullPointSubscriptionResponse(soap*, _tev__CreatePullPointSubscriptionResponse*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscriptionResponse(soap*, _tev__CreatePullPointSubscriptionResponse*) serialize to a stream
/// - _tev__CreatePullPointSubscriptionResponse* _tev__CreatePullPointSubscriptionResponse::soap_dup(soap*) returns deep copy of _tev__CreatePullPointSubscriptionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__CreatePullPointSubscriptionResponse::soap_del() deep deletes _tev__CreatePullPointSubscriptionResponse data members, use only after _tev__CreatePullPointSubscriptionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__CreatePullPointSubscriptionResponse::soap_type() returns SOAP_TYPE__tev__CreatePullPointSubscriptionResponse or derived type identifier
class _tev__CreatePullPointSubscriptionResponse {
 public:
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
  wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"CurrentTime.
  time_t                               wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TerminationTime.
  time_t                               wsnt__TerminationTime          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
/// @note class _tev__PullMessages operations:
/// - _tev__PullMessages* soap_new__tev__PullMessages(soap*) allocate and default initialize
/// - _tev__PullMessages* soap_new__tev__PullMessages(soap*, int num) allocate and default initialize an array
/// - _tev__PullMessages* soap_new_req__tev__PullMessages(soap*, ...) allocate, set required members
/// - _tev__PullMessages* soap_new_set__tev__PullMessages(soap*, ...) allocate, set all public members
/// - _tev__PullMessages::soap_default(soap*) default initialize members
/// - int soap_read__tev__PullMessages(soap*, _tev__PullMessages*) deserialize from a stream
/// - int soap_write__tev__PullMessages(soap*, _tev__PullMessages*) serialize to a stream
/// - _tev__PullMessages* _tev__PullMessages::soap_dup(soap*) returns deep copy of _tev__PullMessages, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__PullMessages::soap_del() deep deletes _tev__PullMessages data members, use only after _tev__PullMessages::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__PullMessages::soap_type() returns SOAP_TYPE__tev__PullMessages or derived type identifier
class _tev__PullMessages {
 public:
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
  xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "MessageLimit" of type xs:int.
  int                                  MessageLimit                   1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
/// @note class _tev__PullMessagesResponse operations:
/// - _tev__PullMessagesResponse* soap_new__tev__PullMessagesResponse(soap*) allocate and default initialize
/// - _tev__PullMessagesResponse* soap_new__tev__PullMessagesResponse(soap*, int num) allocate and default initialize an array
/// - _tev__PullMessagesResponse* soap_new_req__tev__PullMessagesResponse(soap*, ...) allocate, set required members
/// - _tev__PullMessagesResponse* soap_new_set__tev__PullMessagesResponse(soap*, ...) allocate, set all public members
/// - _tev__PullMessagesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__PullMessagesResponse(soap*, _tev__PullMessagesResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesResponse(soap*, _tev__PullMessagesResponse*) serialize to a stream
/// - _tev__PullMessagesResponse* _tev__PullMessagesResponse::soap_dup(soap*) returns deep copy of _tev__PullMessagesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__PullMessagesResponse::soap_del() deep deletes _tev__PullMessagesResponse data members, use only after _tev__PullMessagesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__PullMessagesResponse::soap_type() returns SOAP_TYPE__tev__PullMessagesResponse or derived type identifier
class _tev__PullMessagesResponse {
 public:
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTime" of type xs:dateTime.
  time_t                               CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element "TerminationTime" of type xs:dateTime.
  time_t                               TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
///
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
  std::vector<wsnt__NotificationMessageHolderType*> wsnt__NotificationMessage      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
/// @note class _tev__PullMessagesFaultResponse operations:
/// - _tev__PullMessagesFaultResponse* soap_new__tev__PullMessagesFaultResponse(soap*) allocate and default initialize
/// - _tev__PullMessagesFaultResponse* soap_new__tev__PullMessagesFaultResponse(soap*, int num) allocate and default initialize an array
/// - _tev__PullMessagesFaultResponse* soap_new_req__tev__PullMessagesFaultResponse(soap*, ...) allocate, set required members
/// - _tev__PullMessagesFaultResponse* soap_new_set__tev__PullMessagesFaultResponse(soap*, ...) allocate, set all public members
/// - _tev__PullMessagesFaultResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__PullMessagesFaultResponse(soap*, _tev__PullMessagesFaultResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesFaultResponse(soap*, _tev__PullMessagesFaultResponse*) serialize to a stream
/// - _tev__PullMessagesFaultResponse* _tev__PullMessagesFaultResponse::soap_dup(soap*) returns deep copy of _tev__PullMessagesFaultResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__PullMessagesFaultResponse::soap_del() deep deletes _tev__PullMessagesFaultResponse data members, use only after _tev__PullMessagesFaultResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__PullMessagesFaultResponse::soap_type() returns SOAP_TYPE__tev__PullMessagesFaultResponse or derived type identifier
class _tev__PullMessagesFaultResponse {
 public:
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxTimeout" of type xs:duration.
  xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMessageLimit" of type xs:int.
  int                                  MaxMessageLimit                1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
/// @note class _tev__Seek operations:
/// - _tev__Seek* soap_new__tev__Seek(soap*) allocate and default initialize
/// - _tev__Seek* soap_new__tev__Seek(soap*, int num) allocate and default initialize an array
/// - _tev__Seek* soap_new_req__tev__Seek(soap*, ...) allocate, set required members
/// - _tev__Seek* soap_new_set__tev__Seek(soap*, ...) allocate, set all public members
/// - _tev__Seek::soap_default(soap*) default initialize members
/// - int soap_read__tev__Seek(soap*, _tev__Seek*) deserialize from a stream
/// - int soap_write__tev__Seek(soap*, _tev__Seek*) serialize to a stream
/// - _tev__Seek* _tev__Seek::soap_dup(soap*) returns deep copy of _tev__Seek, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__Seek::soap_del() deep deletes _tev__Seek data members, use only after _tev__Seek::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__Seek::soap_type() returns SOAP_TYPE__tev__Seek or derived type identifier
class _tev__Seek {
 public:
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
  time_t                               UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type xs:boolean.
  bool*                                Reverse                        0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
/// @note class _tev__SeekResponse operations:
/// - _tev__SeekResponse* soap_new__tev__SeekResponse(soap*) allocate and default initialize
/// - _tev__SeekResponse* soap_new__tev__SeekResponse(soap*, int num) allocate and default initialize an array
/// - _tev__SeekResponse* soap_new_req__tev__SeekResponse(soap*, ...) allocate, set required members
/// - _tev__SeekResponse* soap_new_set__tev__SeekResponse(soap*, ...) allocate, set all public members
/// - _tev__SeekResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__SeekResponse(soap*, _tev__SeekResponse*) deserialize from a stream
/// - int soap_write__tev__SeekResponse(soap*, _tev__SeekResponse*) serialize to a stream
/// - _tev__SeekResponse* _tev__SeekResponse::soap_dup(soap*) returns deep copy of _tev__SeekResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__SeekResponse::soap_del() deep deletes _tev__SeekResponse data members, use only after _tev__SeekResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__SeekResponse::soap_type() returns SOAP_TYPE__tev__SeekResponse or derived type identifier
class _tev__SeekResponse {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note class _tev__SetSynchronizationPoint operations:
/// - _tev__SetSynchronizationPoint* soap_new__tev__SetSynchronizationPoint(soap*) allocate and default initialize
/// - _tev__SetSynchronizationPoint* soap_new__tev__SetSynchronizationPoint(soap*, int num) allocate and default initialize an array
/// - _tev__SetSynchronizationPoint* soap_new_req__tev__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - _tev__SetSynchronizationPoint* soap_new_set__tev__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - _tev__SetSynchronizationPoint::soap_default(soap*) default initialize members
/// - int soap_read__tev__SetSynchronizationPoint(soap*, _tev__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPoint(soap*, _tev__SetSynchronizationPoint*) serialize to a stream
/// - _tev__SetSynchronizationPoint* _tev__SetSynchronizationPoint::soap_dup(soap*) returns deep copy of _tev__SetSynchronizationPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__SetSynchronizationPoint::soap_del() deep deletes _tev__SetSynchronizationPoint data members, use only after _tev__SetSynchronizationPoint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__SetSynchronizationPoint::soap_type() returns SOAP_TYPE__tev__SetSynchronizationPoint or derived type identifier
class _tev__SetSynchronizationPoint {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note class _tev__SetSynchronizationPointResponse operations:
/// - _tev__SetSynchronizationPointResponse* soap_new__tev__SetSynchronizationPointResponse(soap*) allocate and default initialize
/// - _tev__SetSynchronizationPointResponse* soap_new__tev__SetSynchronizationPointResponse(soap*, int num) allocate and default initialize an array
/// - _tev__SetSynchronizationPointResponse* soap_new_req__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - _tev__SetSynchronizationPointResponse* soap_new_set__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - _tev__SetSynchronizationPointResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__SetSynchronizationPointResponse(soap*, _tev__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPointResponse(soap*, _tev__SetSynchronizationPointResponse*) serialize to a stream
/// - _tev__SetSynchronizationPointResponse* _tev__SetSynchronizationPointResponse::soap_dup(soap*) returns deep copy of _tev__SetSynchronizationPointResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__SetSynchronizationPointResponse::soap_del() deep deletes _tev__SetSynchronizationPointResponse data members, use only after _tev__SetSynchronizationPointResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__SetSynchronizationPointResponse::soap_type() returns SOAP_TYPE__tev__SetSynchronizationPointResponse or derived type identifier
class _tev__SetSynchronizationPointResponse {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
/// @note class _tev__GetEventProperties operations:
/// - _tev__GetEventProperties* soap_new__tev__GetEventProperties(soap*) allocate and default initialize
/// - _tev__GetEventProperties* soap_new__tev__GetEventProperties(soap*, int num) allocate and default initialize an array
/// - _tev__GetEventProperties* soap_new_req__tev__GetEventProperties(soap*, ...) allocate, set required members
/// - _tev__GetEventProperties* soap_new_set__tev__GetEventProperties(soap*, ...) allocate, set all public members
/// - _tev__GetEventProperties::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetEventProperties(soap*, _tev__GetEventProperties*) deserialize from a stream
/// - int soap_write__tev__GetEventProperties(soap*, _tev__GetEventProperties*) serialize to a stream
/// - _tev__GetEventProperties* _tev__GetEventProperties::soap_dup(soap*) returns deep copy of _tev__GetEventProperties, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetEventProperties::soap_del() deep deletes _tev__GetEventProperties data members, use only after _tev__GetEventProperties::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetEventProperties::soap_type() returns SOAP_TYPE__tev__GetEventProperties or derived type identifier
class _tev__GetEventProperties {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
/// @note class _tev__GetEventPropertiesResponse operations:
/// - _tev__GetEventPropertiesResponse* soap_new__tev__GetEventPropertiesResponse(soap*) allocate and default initialize
/// - _tev__GetEventPropertiesResponse* soap_new__tev__GetEventPropertiesResponse(soap*, int num) allocate and default initialize an array
/// - _tev__GetEventPropertiesResponse* soap_new_req__tev__GetEventPropertiesResponse(soap*, ...) allocate, set required members
/// - _tev__GetEventPropertiesResponse* soap_new_set__tev__GetEventPropertiesResponse(soap*, ...) allocate, set all public members
/// - _tev__GetEventPropertiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetEventPropertiesResponse(soap*, _tev__GetEventPropertiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetEventPropertiesResponse(soap*, _tev__GetEventPropertiesResponse*) serialize to a stream
/// - _tev__GetEventPropertiesResponse* _tev__GetEventPropertiesResponse::soap_dup(soap*) returns deep copy of _tev__GetEventPropertiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetEventPropertiesResponse::soap_del() deep deletes _tev__GetEventPropertiesResponse data members, use only after _tev__GetEventPropertiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetEventPropertiesResponse::soap_type() returns SOAP_TYPE__tev__GetEventPropertiesResponse or derived type identifier
class _tev__GetEventPropertiesResponse {
 public:
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
  std::vector<xsd__anyURI            > TopicNamespaceLocation         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"FixedTopicSet.
  bool                                 wsnt__FixedTopicSet            1 = true;	///< Required element with default value="true".
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:"TopicSet.
  wstop__TopicSetType*                 wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI element refs of length 1..unbounded.
  std::vector<xsd__anyURI            > wsnt__TopicExpressionDialect   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
///   A device that does not support any MessageContentFilterDialect returns a single empty url.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
  std::vector<xsd__anyURI            > MessageContentFilterDialect    1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
  std::vector<xsd__anyURI            > ProducerPropertiesFilterDialect 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
  std::vector<xsd__anyURI            > MessageContentSchemaLocation   1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":AddEventBroker
/// @brief "http://www.onvif.org/ver10/events/wsdl":AddEventBroker is a complexType.
///
/// @note class _tev__AddEventBroker operations:
/// - _tev__AddEventBroker* soap_new__tev__AddEventBroker(soap*) allocate and default initialize
/// - _tev__AddEventBroker* soap_new__tev__AddEventBroker(soap*, int num) allocate and default initialize an array
/// - _tev__AddEventBroker* soap_new_req__tev__AddEventBroker(soap*, ...) allocate, set required members
/// - _tev__AddEventBroker* soap_new_set__tev__AddEventBroker(soap*, ...) allocate, set all public members
/// - _tev__AddEventBroker::soap_default(soap*) default initialize members
/// - int soap_read__tev__AddEventBroker(soap*, _tev__AddEventBroker*) deserialize from a stream
/// - int soap_write__tev__AddEventBroker(soap*, _tev__AddEventBroker*) serialize to a stream
/// - _tev__AddEventBroker* _tev__AddEventBroker::soap_dup(soap*) returns deep copy of _tev__AddEventBroker, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__AddEventBroker::soap_del() deep deletes _tev__AddEventBroker data members, use only after _tev__AddEventBroker::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__AddEventBroker::soap_type() returns SOAP_TYPE__tev__AddEventBroker or derived type identifier
class _tev__AddEventBroker {
 public:
/// Element "EventBroker" of type "http://www.onvif.org/ver10/events/wsdl":EventBrokerConfig.
  tev__EventBrokerConfig*              EventBroker                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":AddEventBrokerResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":AddEventBrokerResponse is a complexType.
///
/// @note class _tev__AddEventBrokerResponse operations:
/// - _tev__AddEventBrokerResponse* soap_new__tev__AddEventBrokerResponse(soap*) allocate and default initialize
/// - _tev__AddEventBrokerResponse* soap_new__tev__AddEventBrokerResponse(soap*, int num) allocate and default initialize an array
/// - _tev__AddEventBrokerResponse* soap_new_req__tev__AddEventBrokerResponse(soap*, ...) allocate, set required members
/// - _tev__AddEventBrokerResponse* soap_new_set__tev__AddEventBrokerResponse(soap*, ...) allocate, set all public members
/// - _tev__AddEventBrokerResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__AddEventBrokerResponse(soap*, _tev__AddEventBrokerResponse*) deserialize from a stream
/// - int soap_write__tev__AddEventBrokerResponse(soap*, _tev__AddEventBrokerResponse*) serialize to a stream
/// - _tev__AddEventBrokerResponse* _tev__AddEventBrokerResponse::soap_dup(soap*) returns deep copy of _tev__AddEventBrokerResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__AddEventBrokerResponse::soap_del() deep deletes _tev__AddEventBrokerResponse data members, use only after _tev__AddEventBrokerResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__AddEventBrokerResponse::soap_type() returns SOAP_TYPE__tev__AddEventBrokerResponse or derived type identifier
class _tev__AddEventBrokerResponse {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":DeleteEventBroker
/// @brief "http://www.onvif.org/ver10/events/wsdl":DeleteEventBroker is a complexType.
///
/// @note class _tev__DeleteEventBroker operations:
/// - _tev__DeleteEventBroker* soap_new__tev__DeleteEventBroker(soap*) allocate and default initialize
/// - _tev__DeleteEventBroker* soap_new__tev__DeleteEventBroker(soap*, int num) allocate and default initialize an array
/// - _tev__DeleteEventBroker* soap_new_req__tev__DeleteEventBroker(soap*, ...) allocate, set required members
/// - _tev__DeleteEventBroker* soap_new_set__tev__DeleteEventBroker(soap*, ...) allocate, set all public members
/// - _tev__DeleteEventBroker::soap_default(soap*) default initialize members
/// - int soap_read__tev__DeleteEventBroker(soap*, _tev__DeleteEventBroker*) deserialize from a stream
/// - int soap_write__tev__DeleteEventBroker(soap*, _tev__DeleteEventBroker*) serialize to a stream
/// - _tev__DeleteEventBroker* _tev__DeleteEventBroker::soap_dup(soap*) returns deep copy of _tev__DeleteEventBroker, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__DeleteEventBroker::soap_del() deep deletes _tev__DeleteEventBroker data members, use only after _tev__DeleteEventBroker::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__DeleteEventBroker::soap_type() returns SOAP_TYPE__tev__DeleteEventBroker or derived type identifier
class _tev__DeleteEventBroker {
 public:
/// Element "Address" of type xs:anyURI.
  xsd__anyURI                          Address                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":DeleteEventBrokerResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":DeleteEventBrokerResponse is a complexType.
///
/// @note class _tev__DeleteEventBrokerResponse operations:
/// - _tev__DeleteEventBrokerResponse* soap_new__tev__DeleteEventBrokerResponse(soap*) allocate and default initialize
/// - _tev__DeleteEventBrokerResponse* soap_new__tev__DeleteEventBrokerResponse(soap*, int num) allocate and default initialize an array
/// - _tev__DeleteEventBrokerResponse* soap_new_req__tev__DeleteEventBrokerResponse(soap*, ...) allocate, set required members
/// - _tev__DeleteEventBrokerResponse* soap_new_set__tev__DeleteEventBrokerResponse(soap*, ...) allocate, set all public members
/// - _tev__DeleteEventBrokerResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__DeleteEventBrokerResponse(soap*, _tev__DeleteEventBrokerResponse*) deserialize from a stream
/// - int soap_write__tev__DeleteEventBrokerResponse(soap*, _tev__DeleteEventBrokerResponse*) serialize to a stream
/// - _tev__DeleteEventBrokerResponse* _tev__DeleteEventBrokerResponse::soap_dup(soap*) returns deep copy of _tev__DeleteEventBrokerResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__DeleteEventBrokerResponse::soap_del() deep deletes _tev__DeleteEventBrokerResponse data members, use only after _tev__DeleteEventBrokerResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__DeleteEventBrokerResponse::soap_type() returns SOAP_TYPE__tev__DeleteEventBrokerResponse or derived type identifier
class _tev__DeleteEventBrokerResponse {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventBrokers
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventBrokers is a complexType.
///
/// @note class _tev__GetEventBrokers operations:
/// - _tev__GetEventBrokers* soap_new__tev__GetEventBrokers(soap*) allocate and default initialize
/// - _tev__GetEventBrokers* soap_new__tev__GetEventBrokers(soap*, int num) allocate and default initialize an array
/// - _tev__GetEventBrokers* soap_new_req__tev__GetEventBrokers(soap*, ...) allocate, set required members
/// - _tev__GetEventBrokers* soap_new_set__tev__GetEventBrokers(soap*, ...) allocate, set all public members
/// - _tev__GetEventBrokers::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetEventBrokers(soap*, _tev__GetEventBrokers*) deserialize from a stream
/// - int soap_write__tev__GetEventBrokers(soap*, _tev__GetEventBrokers*) serialize to a stream
/// - _tev__GetEventBrokers* _tev__GetEventBrokers::soap_dup(soap*) returns deep copy of _tev__GetEventBrokers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetEventBrokers::soap_del() deep deletes _tev__GetEventBrokers data members, use only after _tev__GetEventBrokers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetEventBrokers::soap_type() returns SOAP_TYPE__tev__GetEventBrokers or derived type identifier
class _tev__GetEventBrokers {
 public:
/// Element "Address" of type xs:anyURI.
  xsd__anyURI*                         Address                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventBrokersResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventBrokersResponse is a complexType.
///
/// @note class _tev__GetEventBrokersResponse operations:
/// - _tev__GetEventBrokersResponse* soap_new__tev__GetEventBrokersResponse(soap*) allocate and default initialize
/// - _tev__GetEventBrokersResponse* soap_new__tev__GetEventBrokersResponse(soap*, int num) allocate and default initialize an array
/// - _tev__GetEventBrokersResponse* soap_new_req__tev__GetEventBrokersResponse(soap*, ...) allocate, set required members
/// - _tev__GetEventBrokersResponse* soap_new_set__tev__GetEventBrokersResponse(soap*, ...) allocate, set all public members
/// - _tev__GetEventBrokersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tev__GetEventBrokersResponse(soap*, _tev__GetEventBrokersResponse*) deserialize from a stream
/// - int soap_write__tev__GetEventBrokersResponse(soap*, _tev__GetEventBrokersResponse*) serialize to a stream
/// - _tev__GetEventBrokersResponse* _tev__GetEventBrokersResponse::soap_dup(soap*) returns deep copy of _tev__GetEventBrokersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tev__GetEventBrokersResponse::soap_del() deep deletes _tev__GetEventBrokersResponse data members, use only after _tev__GetEventBrokersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tev__GetEventBrokersResponse::soap_type() returns SOAP_TYPE__tev__GetEventBrokersResponse or derived type identifier
class _tev__GetEventBrokersResponse {
 public:
/// Vector of tev__EventBrokerConfig* of length 0..unbounded.
  std::vector<tev__EventBrokerConfig*> EventBroker                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType as wsrfr__ResourceUnknownFaultType
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType as wsrfr__ResourceUnavailableFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType as wsnt__SubscribeCreationFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType as wsnt__InvalidFilterFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType as wsnt__TopicExpressionDialectUnknownFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType as wsnt__InvalidTopicExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType as wsnt__TopicNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType as wsnt__MultipleTopicsSpecifiedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType as wsnt__InvalidProducerPropertiesExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType as wsnt__InvalidMessageContentExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType as wsnt__UnrecognizedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType as wsnt__UnsupportedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType as wsnt__NotifyMessageNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType as wsnt__UnacceptableInitialTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType as wsnt__NoCurrentMessageOnTopicFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType as wsnt__UnableToGetMessagesFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType as wsnt__UnableToDestroyPullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType as wsnt__UnableToCreatePullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType as wsnt__UnacceptableTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType as wsnt__UnableToDestroySubscriptionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType as wsnt__PauseFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType as wsnt__ResumeFailedFaultType
///
/// @note class wsrfbf__BaseFaultType operations:
/// - wsrfbf__BaseFaultType* soap_new_wsrfbf__BaseFaultType(soap*) allocate and default initialize
/// - wsrfbf__BaseFaultType* soap_new_wsrfbf__BaseFaultType(soap*, int num) allocate and default initialize an array
/// - wsrfbf__BaseFaultType* soap_new_req_wsrfbf__BaseFaultType(soap*, ...) allocate, set required members
/// - wsrfbf__BaseFaultType* soap_new_set_wsrfbf__BaseFaultType(soap*, ...) allocate, set all public members
/// - wsrfbf__BaseFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) deserialize from a stream
/// - int soap_write_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) serialize to a stream
/// - wsrfbf__BaseFaultType* wsrfbf__BaseFaultType::soap_dup(soap*) returns deep copy of wsrfbf__BaseFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsrfbf__BaseFaultType::soap_del() deep deletes wsrfbf__BaseFaultType data members, use only after wsrfbf__BaseFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsrfbf__BaseFaultType::soap_type() returns SOAP_TYPE_wsrfbf__BaseFaultType or derived type identifier
class wsrfbf__BaseFaultType {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
  time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
  wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// @note class _wsrfbf__BaseFaultType_ErrorCode operations:
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*) allocate and default initialize
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new_req__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new_set__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - _wsrfbf__BaseFaultType_ErrorCode::soap_default(soap*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a stream
/// - _wsrfbf__BaseFaultType_ErrorCode* _wsrfbf__BaseFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__BaseFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsrfbf__BaseFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__BaseFaultType_ErrorCode data members, use only after _wsrfbf__BaseFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsrfbf__BaseFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode or derived type identifier
  class _wsrfbf__BaseFaultType_ErrorCode {
   public:
/// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
  }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
  std::vector<
/// @note class _wsrfbf__BaseFaultType_Description operations:
/// - _wsrfbf__BaseFaultType_Description* soap_new__wsrfbf__BaseFaultType_Description(soap*) allocate and default initialize
/// - _wsrfbf__BaseFaultType_Description* soap_new__wsrfbf__BaseFaultType_Description(soap*, int num) allocate and default initialize an array
/// - _wsrfbf__BaseFaultType_Description* soap_new_req__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set required members
/// - _wsrfbf__BaseFaultType_Description* soap_new_set__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set all public members
/// - _wsrfbf__BaseFaultType_Description::soap_default(soap*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) serialize to a stream
/// - _wsrfbf__BaseFaultType_Description* _wsrfbf__BaseFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__BaseFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsrfbf__BaseFaultType_Description::soap_del() deep deletes _wsrfbf__BaseFaultType_Description data members, use only after _wsrfbf__BaseFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsrfbf__BaseFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__BaseFaultType_Description or derived type identifier
  class _wsrfbf__BaseFaultType_Description {
   public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
  }>                                   Description                    0;	///< Multiple elements.
/// @note class _wsrfbf__BaseFaultType_FaultCause operations:
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new__wsrfbf__BaseFaultType_FaultCause(soap*) allocate and default initialize
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new__wsrfbf__BaseFaultType_FaultCause(soap*, int num) allocate and default initialize an array
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new_req__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set required members
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new_set__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - _wsrfbf__BaseFaultType_FaultCause::soap_default(soap*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) serialize to a stream
/// - _wsrfbf__BaseFaultType_FaultCause* _wsrfbf__BaseFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__BaseFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsrfbf__BaseFaultType_FaultCause::soap_del() deep deletes _wsrfbf__BaseFaultType_FaultCause data members, use only after _wsrfbf__BaseFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsrfbf__BaseFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause or derived type identifier
  class _wsrfbf__BaseFaultType_FaultCause {
   public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
  }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// @note class wsnt__QueryExpressionType operations:
/// - wsnt__QueryExpressionType* soap_new_wsnt__QueryExpressionType(soap*) allocate and default initialize
/// - wsnt__QueryExpressionType* soap_new_wsnt__QueryExpressionType(soap*, int num) allocate and default initialize an array
/// - wsnt__QueryExpressionType* soap_new_req_wsnt__QueryExpressionType(soap*, ...) allocate, set required members
/// - wsnt__QueryExpressionType* soap_new_set_wsnt__QueryExpressionType(soap*, ...) allocate, set all public members
/// - wsnt__QueryExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) serialize to a stream
/// - wsnt__QueryExpressionType* wsnt__QueryExpressionType::soap_dup(soap*) returns deep copy of wsnt__QueryExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__QueryExpressionType::soap_del() deep deletes wsnt__QueryExpressionType data members, use only after wsnt__QueryExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__QueryExpressionType::soap_type() returns SOAP_TYPE_wsnt__QueryExpressionType or derived type identifier
class wsnt__QueryExpressionType {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
  xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// @note class wsnt__TopicExpressionType operations:
/// - wsnt__TopicExpressionType* soap_new_wsnt__TopicExpressionType(soap*) allocate and default initialize
/// - wsnt__TopicExpressionType* soap_new_wsnt__TopicExpressionType(soap*, int num) allocate and default initialize an array
/// - wsnt__TopicExpressionType* soap_new_req_wsnt__TopicExpressionType(soap*, ...) allocate, set required members
/// - wsnt__TopicExpressionType* soap_new_set_wsnt__TopicExpressionType(soap*, ...) allocate, set all public members
/// - wsnt__TopicExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) serialize to a stream
/// - wsnt__TopicExpressionType* wsnt__TopicExpressionType::soap_dup(soap*) returns deep copy of wsnt__TopicExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__TopicExpressionType::soap_del() deep deletes wsnt__TopicExpressionType data members, use only after wsnt__TopicExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__TopicExpressionType::soap_type() returns SOAP_TYPE_wsnt__TopicExpressionType or derived type identifier
class wsnt__TopicExpressionType {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
  xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// @note class wsnt__FilterType operations:
/// - wsnt__FilterType* soap_new_wsnt__FilterType(soap*) allocate and default initialize
/// - wsnt__FilterType* soap_new_wsnt__FilterType(soap*, int num) allocate and default initialize an array
/// - wsnt__FilterType* soap_new_req_wsnt__FilterType(soap*, ...) allocate, set required members
/// - wsnt__FilterType* soap_new_set_wsnt__FilterType(soap*, ...) allocate, set all public members
/// - wsnt__FilterType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__FilterType(soap*, wsnt__FilterType*) deserialize from a stream
/// - int soap_write_wsnt__FilterType(soap*, wsnt__FilterType*) serialize to a stream
/// - wsnt__FilterType* wsnt__FilterType::soap_dup(soap*) returns deep copy of wsnt__FilterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__FilterType::soap_del() deep deletes wsnt__FilterType data members, use only after wsnt__FilterType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__FilterType::soap_type() returns SOAP_TYPE_wsnt__FilterType or derived type identifier
class wsnt__FilterType {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// @note class wsnt__SubscriptionPolicyType operations:
/// - wsnt__SubscriptionPolicyType* soap_new_wsnt__SubscriptionPolicyType(soap*) allocate and default initialize
/// - wsnt__SubscriptionPolicyType* soap_new_wsnt__SubscriptionPolicyType(soap*, int num) allocate and default initialize an array
/// - wsnt__SubscriptionPolicyType* soap_new_req_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set required members
/// - wsnt__SubscriptionPolicyType* soap_new_set_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set all public members
/// - wsnt__SubscriptionPolicyType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) deserialize from a stream
/// - int soap_write_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) serialize to a stream
/// - wsnt__SubscriptionPolicyType* wsnt__SubscriptionPolicyType::soap_dup(soap*) returns deep copy of wsnt__SubscriptionPolicyType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__SubscriptionPolicyType::soap_del() deep deletes wsnt__SubscriptionPolicyType data members, use only after wsnt__SubscriptionPolicyType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__SubscriptionPolicyType::soap_type() returns SOAP_TYPE_wsnt__SubscriptionPolicyType or derived type identifier
class wsnt__SubscriptionPolicyType {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// @note class wsnt__NotificationMessageHolderType operations:
/// - wsnt__NotificationMessageHolderType* soap_new_wsnt__NotificationMessageHolderType(soap*) allocate and default initialize
/// - wsnt__NotificationMessageHolderType* soap_new_wsnt__NotificationMessageHolderType(soap*, int num) allocate and default initialize an array
/// - wsnt__NotificationMessageHolderType* soap_new_req_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set required members
/// - wsnt__NotificationMessageHolderType* soap_new_set_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set all public members
/// - wsnt__NotificationMessageHolderType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) deserialize from a stream
/// - int soap_write_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) serialize to a stream
/// - wsnt__NotificationMessageHolderType* wsnt__NotificationMessageHolderType::soap_dup(soap*) returns deep copy of wsnt__NotificationMessageHolderType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__NotificationMessageHolderType::soap_del() deep deletes wsnt__NotificationMessageHolderType data members, use only after wsnt__NotificationMessageHolderType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__NotificationMessageHolderType::soap_type() returns SOAP_TYPE_wsnt__NotificationMessageHolderType or derived type identifier
class wsnt__NotificationMessageHolderType {
 public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionReference.
  wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Topic.
  wsnt__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ProducerReference.
  wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// @note class _wsnt__NotificationMessageHolderType_Message operations:
/// - _wsnt__NotificationMessageHolderType_Message* soap_new__wsnt__NotificationMessageHolderType_Message(soap*) allocate and default initialize
/// - _wsnt__NotificationMessageHolderType_Message* soap_new__wsnt__NotificationMessageHolderType_Message(soap*, int num) allocate and default initialize an array
/// - _wsnt__NotificationMessageHolderType_Message* soap_new_req__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set required members
/// - _wsnt__NotificationMessageHolderType_Message* soap_new_set__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set all public members
/// - _wsnt__NotificationMessageHolderType_Message::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a stream
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) serialize to a stream
/// - _wsnt__NotificationMessageHolderType_Message* _wsnt__NotificationMessageHolderType_Message::soap_dup(soap*) returns deep copy of _wsnt__NotificationMessageHolderType_Message, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__NotificationMessageHolderType_Message::soap_del() deep deletes _wsnt__NotificationMessageHolderType_Message data members, use only after _wsnt__NotificationMessageHolderType_Message::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__NotificationMessageHolderType_Message::soap_type() returns SOAP_TYPE__wsnt__NotificationMessageHolderType_Message or derived type identifier
  class _wsnt__NotificationMessageHolderType_Message {
   public:
/// <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
  }                                    Message                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// @note class _wsnt__NotificationProducerRP operations:
/// - _wsnt__NotificationProducerRP* soap_new__wsnt__NotificationProducerRP(soap*) allocate and default initialize
/// - _wsnt__NotificationProducerRP* soap_new__wsnt__NotificationProducerRP(soap*, int num) allocate and default initialize an array
/// - _wsnt__NotificationProducerRP* soap_new_req__wsnt__NotificationProducerRP(soap*, ...) allocate, set required members
/// - _wsnt__NotificationProducerRP* soap_new_set__wsnt__NotificationProducerRP(soap*, ...) allocate, set all public members
/// - _wsnt__NotificationProducerRP::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) deserialize from a stream
/// - int soap_write__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) serialize to a stream
/// - _wsnt__NotificationProducerRP* _wsnt__NotificationProducerRP::soap_dup(soap*) returns deep copy of _wsnt__NotificationProducerRP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__NotificationProducerRP::soap_del() deep deletes _wsnt__NotificationProducerRP data members, use only after _wsnt__NotificationProducerRP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__NotificationProducerRP::soap_type() returns SOAP_TYPE__wsnt__NotificationProducerRP or derived type identifier
class _wsnt__NotificationProducerRP {
 public:
/// Vector of wsnt__TopicExpressionType* element refs of length 0..unbounded.
  std::vector<wsnt__TopicExpressionType*> TopicExpression                0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"FixedTopicSet.
  bool*                                FixedTopicSet                  0 = true;	///< Optional element with default value="true".
/// Vector of xsd__anyURI element refs of length 0..unbounded.
  std::vector<xsd__anyURI            > TopicExpressionDialect         0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TopicSet.
  wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// @note class _wsnt__SubscriptionManagerRP operations:
/// - _wsnt__SubscriptionManagerRP* soap_new__wsnt__SubscriptionManagerRP(soap*) allocate and default initialize
/// - _wsnt__SubscriptionManagerRP* soap_new__wsnt__SubscriptionManagerRP(soap*, int num) allocate and default initialize an array
/// - _wsnt__SubscriptionManagerRP* soap_new_req__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set required members
/// - _wsnt__SubscriptionManagerRP* soap_new_set__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set all public members
/// - _wsnt__SubscriptionManagerRP::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) deserialize from a stream
/// - int soap_write__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) serialize to a stream
/// - _wsnt__SubscriptionManagerRP* _wsnt__SubscriptionManagerRP::soap_dup(soap*) returns deep copy of _wsnt__SubscriptionManagerRP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__SubscriptionManagerRP::soap_del() deep deletes _wsnt__SubscriptionManagerRP data members, use only after _wsnt__SubscriptionManagerRP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__SubscriptionManagerRP::soap_type() returns SOAP_TYPE__wsnt__SubscriptionManagerRP or derived type identifier
class _wsnt__SubscriptionManagerRP {
 public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ConsumerReference.
  wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Filter.
  wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionPolicy.
  wsnt__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CreationTime.
  time_t*                              CreationTime                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// @note class _wsnt__Notify operations:
/// - _wsnt__Notify* soap_new__wsnt__Notify(soap*) allocate and default initialize
/// - _wsnt__Notify* soap_new__wsnt__Notify(soap*, int num) allocate and default initialize an array
/// - _wsnt__Notify* soap_new_req__wsnt__Notify(soap*, ...) allocate, set required members
/// - _wsnt__Notify* soap_new_set__wsnt__Notify(soap*, ...) allocate, set all public members
/// - _wsnt__Notify::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__Notify(soap*, _wsnt__Notify*) deserialize from a stream
/// - int soap_write__wsnt__Notify(soap*, _wsnt__Notify*) serialize to a stream
/// - _wsnt__Notify* _wsnt__Notify::soap_dup(soap*) returns deep copy of _wsnt__Notify, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__Notify::soap_del() deep deletes _wsnt__Notify data members, use only after _wsnt__Notify::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__Notify::soap_type() returns SOAP_TYPE__wsnt__Notify or derived type identifier
class _wsnt__Notify {
 public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 1..unbounded.
  std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// @note class _wsnt__UseRaw operations:
/// - _wsnt__UseRaw* soap_new__wsnt__UseRaw(soap*) allocate and default initialize
/// - _wsnt__UseRaw* soap_new__wsnt__UseRaw(soap*, int num) allocate and default initialize an array
/// - _wsnt__UseRaw* soap_new_req__wsnt__UseRaw(soap*, ...) allocate, set required members
/// - _wsnt__UseRaw* soap_new_set__wsnt__UseRaw(soap*, ...) allocate, set all public members
/// - _wsnt__UseRaw::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__UseRaw(soap*, _wsnt__UseRaw*) deserialize from a stream
/// - int soap_write__wsnt__UseRaw(soap*, _wsnt__UseRaw*) serialize to a stream
/// - _wsnt__UseRaw* _wsnt__UseRaw::soap_dup(soap*) returns deep copy of _wsnt__UseRaw, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__UseRaw::soap_del() deep deletes _wsnt__UseRaw data members, use only after _wsnt__UseRaw::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__UseRaw::soap_type() returns SOAP_TYPE__wsnt__UseRaw or derived type identifier
class _wsnt__UseRaw {
 public:
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// @note class _wsnt__Subscribe operations:
/// - _wsnt__Subscribe* soap_new__wsnt__Subscribe(soap*) allocate and default initialize
/// - _wsnt__Subscribe* soap_new__wsnt__Subscribe(soap*, int num) allocate and default initialize an array
/// - _wsnt__Subscribe* soap_new_req__wsnt__Subscribe(soap*, ...) allocate, set required members
/// - _wsnt__Subscribe* soap_new_set__wsnt__Subscribe(soap*, ...) allocate, set all public members
/// - _wsnt__Subscribe::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__Subscribe(soap*, _wsnt__Subscribe*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe(soap*, _wsnt__Subscribe*) serialize to a stream
/// - _wsnt__Subscribe* _wsnt__Subscribe::soap_dup(soap*) returns deep copy of _wsnt__Subscribe, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__Subscribe::soap_del() deep deletes _wsnt__Subscribe data members, use only after _wsnt__Subscribe::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__Subscribe::soap_type() returns SOAP_TYPE__wsnt__Subscribe or derived type identifier
class _wsnt__Subscribe {
 public:
/// Element "ConsumerReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
  wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
  wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
  wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Optional element.
/// @note class _wsnt__Subscribe_SubscriptionPolicy operations:
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*) allocate and default initialize
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*, int num) allocate and default initialize an array
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new_req__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new_set__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - _wsnt__Subscribe_SubscriptionPolicy::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a stream
/// - _wsnt__Subscribe_SubscriptionPolicy* _wsnt__Subscribe_SubscriptionPolicy::soap_dup(soap*) returns deep copy of _wsnt__Subscribe_SubscriptionPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__Subscribe_SubscriptionPolicy::soap_del() deep deletes _wsnt__Subscribe_SubscriptionPolicy data members, use only after _wsnt__Subscribe_SubscriptionPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__Subscribe_SubscriptionPolicy::soap_type() returns SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy or derived type identifier
  class _wsnt__Subscribe_SubscriptionPolicy {
   public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// @note class _wsnt__SubscribeResponse operations:
/// - _wsnt__SubscribeResponse* soap_new__wsnt__SubscribeResponse(soap*) allocate and default initialize
/// - _wsnt__SubscribeResponse* soap_new__wsnt__SubscribeResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__SubscribeResponse* soap_new_req__wsnt__SubscribeResponse(soap*, ...) allocate, set required members
/// - _wsnt__SubscribeResponse* soap_new_set__wsnt__SubscribeResponse(soap*, ...) allocate, set all public members
/// - _wsnt__SubscribeResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) serialize to a stream
/// - _wsnt__SubscribeResponse* _wsnt__SubscribeResponse::soap_dup(soap*) returns deep copy of _wsnt__SubscribeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__SubscribeResponse::soap_del() deep deletes _wsnt__SubscribeResponse data members, use only after _wsnt__SubscribeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__SubscribeResponse::soap_type() returns SOAP_TYPE__wsnt__SubscribeResponse or derived type identifier
class _wsnt__SubscribeResponse {
 public:
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
  wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
  time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
  time_t*                              TerminationTime                0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// @note class _wsnt__GetCurrentMessage operations:
/// - _wsnt__GetCurrentMessage* soap_new__wsnt__GetCurrentMessage(soap*) allocate and default initialize
/// - _wsnt__GetCurrentMessage* soap_new__wsnt__GetCurrentMessage(soap*, int num) allocate and default initialize an array
/// - _wsnt__GetCurrentMessage* soap_new_req__wsnt__GetCurrentMessage(soap*, ...) allocate, set required members
/// - _wsnt__GetCurrentMessage* soap_new_set__wsnt__GetCurrentMessage(soap*, ...) allocate, set all public members
/// - _wsnt__GetCurrentMessage::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) serialize to a stream
/// - _wsnt__GetCurrentMessage* _wsnt__GetCurrentMessage::soap_dup(soap*) returns deep copy of _wsnt__GetCurrentMessage, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__GetCurrentMessage::soap_del() deep deletes _wsnt__GetCurrentMessage data members, use only after _wsnt__GetCurrentMessage::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__GetCurrentMessage::soap_type() returns SOAP_TYPE__wsnt__GetCurrentMessage or derived type identifier
class _wsnt__GetCurrentMessage {
 public:
/// Element "Topic" of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
  wsnt__TopicExpressionType*           Topic                          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// @note class _wsnt__GetCurrentMessageResponse operations:
/// - _wsnt__GetCurrentMessageResponse* soap_new__wsnt__GetCurrentMessageResponse(soap*) allocate and default initialize
/// - _wsnt__GetCurrentMessageResponse* soap_new__wsnt__GetCurrentMessageResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__GetCurrentMessageResponse* soap_new_req__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set required members
/// - _wsnt__GetCurrentMessageResponse* soap_new_set__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set all public members
/// - _wsnt__GetCurrentMessageResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) serialize to a stream
/// - _wsnt__GetCurrentMessageResponse* _wsnt__GetCurrentMessageResponse::soap_dup(soap*) returns deep copy of _wsnt__GetCurrentMessageResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__GetCurrentMessageResponse::soap_del() deep deletes _wsnt__GetCurrentMessageResponse data members, use only after _wsnt__GetCurrentMessageResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__GetCurrentMessageResponse::soap_type() returns SOAP_TYPE__wsnt__GetCurrentMessageResponse or derived type identifier
class _wsnt__GetCurrentMessageResponse {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// @note class _wsnt__GetMessages operations:
/// - _wsnt__GetMessages* soap_new__wsnt__GetMessages(soap*) allocate and default initialize
/// - _wsnt__GetMessages* soap_new__wsnt__GetMessages(soap*, int num) allocate and default initialize an array
/// - _wsnt__GetMessages* soap_new_req__wsnt__GetMessages(soap*, ...) allocate, set required members
/// - _wsnt__GetMessages* soap_new_set__wsnt__GetMessages(soap*, ...) allocate, set all public members
/// - _wsnt__GetMessages::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__GetMessages(soap*, _wsnt__GetMessages*) deserialize from a stream
/// - int soap_write__wsnt__GetMessages(soap*, _wsnt__GetMessages*) serialize to a stream
/// - _wsnt__GetMessages* _wsnt__GetMessages::soap_dup(soap*) returns deep copy of _wsnt__GetMessages, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__GetMessages::soap_del() deep deletes _wsnt__GetMessages data members, use only after _wsnt__GetMessages::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__GetMessages::soap_type() returns SOAP_TYPE__wsnt__GetMessages or derived type identifier
class _wsnt__GetMessages {
 public:
/// Element "MaximumNumber" of type xs:nonNegativeInteger.
  xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// @note class _wsnt__GetMessagesResponse operations:
/// - _wsnt__GetMessagesResponse* soap_new__wsnt__GetMessagesResponse(soap*) allocate and default initialize
/// - _wsnt__GetMessagesResponse* soap_new__wsnt__GetMessagesResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__GetMessagesResponse* soap_new_req__wsnt__GetMessagesResponse(soap*, ...) allocate, set required members
/// - _wsnt__GetMessagesResponse* soap_new_set__wsnt__GetMessagesResponse(soap*, ...) allocate, set all public members
/// - _wsnt__GetMessagesResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) serialize to a stream
/// - _wsnt__GetMessagesResponse* _wsnt__GetMessagesResponse::soap_dup(soap*) returns deep copy of _wsnt__GetMessagesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__GetMessagesResponse::soap_del() deep deletes _wsnt__GetMessagesResponse data members, use only after _wsnt__GetMessagesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__GetMessagesResponse::soap_type() returns SOAP_TYPE__wsnt__GetMessagesResponse or derived type identifier
class _wsnt__GetMessagesResponse {
 public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
  std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// @note class _wsnt__DestroyPullPoint operations:
/// - _wsnt__DestroyPullPoint* soap_new__wsnt__DestroyPullPoint(soap*) allocate and default initialize
/// - _wsnt__DestroyPullPoint* soap_new__wsnt__DestroyPullPoint(soap*, int num) allocate and default initialize an array
/// - _wsnt__DestroyPullPoint* soap_new_req__wsnt__DestroyPullPoint(soap*, ...) allocate, set required members
/// - _wsnt__DestroyPullPoint* soap_new_set__wsnt__DestroyPullPoint(soap*, ...) allocate, set all public members
/// - _wsnt__DestroyPullPoint::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) serialize to a stream
/// - _wsnt__DestroyPullPoint* _wsnt__DestroyPullPoint::soap_dup(soap*) returns deep copy of _wsnt__DestroyPullPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__DestroyPullPoint::soap_del() deep deletes _wsnt__DestroyPullPoint data members, use only after _wsnt__DestroyPullPoint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__DestroyPullPoint::soap_type() returns SOAP_TYPE__wsnt__DestroyPullPoint or derived type identifier
class _wsnt__DestroyPullPoint {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// @note class _wsnt__DestroyPullPointResponse operations:
/// - _wsnt__DestroyPullPointResponse* soap_new__wsnt__DestroyPullPointResponse(soap*) allocate and default initialize
/// - _wsnt__DestroyPullPointResponse* soap_new__wsnt__DestroyPullPointResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__DestroyPullPointResponse* soap_new_req__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set required members
/// - _wsnt__DestroyPullPointResponse* soap_new_set__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set all public members
/// - _wsnt__DestroyPullPointResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) serialize to a stream
/// - _wsnt__DestroyPullPointResponse* _wsnt__DestroyPullPointResponse::soap_dup(soap*) returns deep copy of _wsnt__DestroyPullPointResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__DestroyPullPointResponse::soap_del() deep deletes _wsnt__DestroyPullPointResponse data members, use only after _wsnt__DestroyPullPointResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__DestroyPullPointResponse::soap_type() returns SOAP_TYPE__wsnt__DestroyPullPointResponse or derived type identifier
class _wsnt__DestroyPullPointResponse {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// @note class _wsnt__CreatePullPoint operations:
/// - _wsnt__CreatePullPoint* soap_new__wsnt__CreatePullPoint(soap*) allocate and default initialize
/// - _wsnt__CreatePullPoint* soap_new__wsnt__CreatePullPoint(soap*, int num) allocate and default initialize an array
/// - _wsnt__CreatePullPoint* soap_new_req__wsnt__CreatePullPoint(soap*, ...) allocate, set required members
/// - _wsnt__CreatePullPoint* soap_new_set__wsnt__CreatePullPoint(soap*, ...) allocate, set all public members
/// - _wsnt__CreatePullPoint::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) serialize to a stream
/// - _wsnt__CreatePullPoint* _wsnt__CreatePullPoint::soap_dup(soap*) returns deep copy of _wsnt__CreatePullPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__CreatePullPoint::soap_del() deep deletes _wsnt__CreatePullPoint data members, use only after _wsnt__CreatePullPoint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__CreatePullPoint::soap_type() returns SOAP_TYPE__wsnt__CreatePullPoint or derived type identifier
class _wsnt__CreatePullPoint {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// @note class _wsnt__CreatePullPointResponse operations:
/// - _wsnt__CreatePullPointResponse* soap_new__wsnt__CreatePullPointResponse(soap*) allocate and default initialize
/// - _wsnt__CreatePullPointResponse* soap_new__wsnt__CreatePullPointResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__CreatePullPointResponse* soap_new_req__wsnt__CreatePullPointResponse(soap*, ...) allocate, set required members
/// - _wsnt__CreatePullPointResponse* soap_new_set__wsnt__CreatePullPointResponse(soap*, ...) allocate, set all public members
/// - _wsnt__CreatePullPointResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) serialize to a stream
/// - _wsnt__CreatePullPointResponse* _wsnt__CreatePullPointResponse::soap_dup(soap*) returns deep copy of _wsnt__CreatePullPointResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__CreatePullPointResponse::soap_del() deep deletes _wsnt__CreatePullPointResponse data members, use only after _wsnt__CreatePullPointResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__CreatePullPointResponse::soap_type() returns SOAP_TYPE__wsnt__CreatePullPointResponse or derived type identifier
class _wsnt__CreatePullPointResponse {
 public:
/// Element "PullPoint" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
  wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// @note class _wsnt__Renew operations:
/// - _wsnt__Renew* soap_new__wsnt__Renew(soap*) allocate and default initialize
/// - _wsnt__Renew* soap_new__wsnt__Renew(soap*, int num) allocate and default initialize an array
/// - _wsnt__Renew* soap_new_req__wsnt__Renew(soap*, ...) allocate, set required members
/// - _wsnt__Renew* soap_new_set__wsnt__Renew(soap*, ...) allocate, set all public members
/// - _wsnt__Renew::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__Renew(soap*, _wsnt__Renew*) deserialize from a stream
/// - int soap_write__wsnt__Renew(soap*, _wsnt__Renew*) serialize to a stream
/// - _wsnt__Renew* _wsnt__Renew::soap_dup(soap*) returns deep copy of _wsnt__Renew, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__Renew::soap_del() deep deletes _wsnt__Renew data members, use only after _wsnt__Renew::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__Renew::soap_type() returns SOAP_TYPE__wsnt__Renew or derived type identifier
class _wsnt__Renew {
 public:
/// Element "TerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
  wsnt__AbsoluteOrRelativeTimeType*    TerminationTime                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// @note class _wsnt__RenewResponse operations:
/// - _wsnt__RenewResponse* soap_new__wsnt__RenewResponse(soap*) allocate and default initialize
/// - _wsnt__RenewResponse* soap_new__wsnt__RenewResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__RenewResponse* soap_new_req__wsnt__RenewResponse(soap*, ...) allocate, set required members
/// - _wsnt__RenewResponse* soap_new_set__wsnt__RenewResponse(soap*, ...) allocate, set all public members
/// - _wsnt__RenewResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) deserialize from a stream
/// - int soap_write__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) serialize to a stream
/// - _wsnt__RenewResponse* _wsnt__RenewResponse::soap_dup(soap*) returns deep copy of _wsnt__RenewResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__RenewResponse::soap_del() deep deletes _wsnt__RenewResponse data members, use only after _wsnt__RenewResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__RenewResponse::soap_type() returns SOAP_TYPE__wsnt__RenewResponse or derived type identifier
class _wsnt__RenewResponse {
 public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
  time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
  time_t*                              CurrentTime                    0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// @note class _wsnt__Unsubscribe operations:
/// - _wsnt__Unsubscribe* soap_new__wsnt__Unsubscribe(soap*) allocate and default initialize
/// - _wsnt__Unsubscribe* soap_new__wsnt__Unsubscribe(soap*, int num) allocate and default initialize an array
/// - _wsnt__Unsubscribe* soap_new_req__wsnt__Unsubscribe(soap*, ...) allocate, set required members
/// - _wsnt__Unsubscribe* soap_new_set__wsnt__Unsubscribe(soap*, ...) allocate, set all public members
/// - _wsnt__Unsubscribe::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) deserialize from a stream
/// - int soap_write__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) serialize to a stream
/// - _wsnt__Unsubscribe* _wsnt__Unsubscribe::soap_dup(soap*) returns deep copy of _wsnt__Unsubscribe, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__Unsubscribe::soap_del() deep deletes _wsnt__Unsubscribe data members, use only after _wsnt__Unsubscribe::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__Unsubscribe::soap_type() returns SOAP_TYPE__wsnt__Unsubscribe or derived type identifier
class _wsnt__Unsubscribe {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// @note class _wsnt__UnsubscribeResponse operations:
/// - _wsnt__UnsubscribeResponse* soap_new__wsnt__UnsubscribeResponse(soap*) allocate and default initialize
/// - _wsnt__UnsubscribeResponse* soap_new__wsnt__UnsubscribeResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__UnsubscribeResponse* soap_new_req__wsnt__UnsubscribeResponse(soap*, ...) allocate, set required members
/// - _wsnt__UnsubscribeResponse* soap_new_set__wsnt__UnsubscribeResponse(soap*, ...) allocate, set all public members
/// - _wsnt__UnsubscribeResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) serialize to a stream
/// - _wsnt__UnsubscribeResponse* _wsnt__UnsubscribeResponse::soap_dup(soap*) returns deep copy of _wsnt__UnsubscribeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__UnsubscribeResponse::soap_del() deep deletes _wsnt__UnsubscribeResponse data members, use only after _wsnt__UnsubscribeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__UnsubscribeResponse::soap_type() returns SOAP_TYPE__wsnt__UnsubscribeResponse or derived type identifier
class _wsnt__UnsubscribeResponse {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// @note class _wsnt__PauseSubscription operations:
/// - _wsnt__PauseSubscription* soap_new__wsnt__PauseSubscription(soap*) allocate and default initialize
/// - _wsnt__PauseSubscription* soap_new__wsnt__PauseSubscription(soap*, int num) allocate and default initialize an array
/// - _wsnt__PauseSubscription* soap_new_req__wsnt__PauseSubscription(soap*, ...) allocate, set required members
/// - _wsnt__PauseSubscription* soap_new_set__wsnt__PauseSubscription(soap*, ...) allocate, set all public members
/// - _wsnt__PauseSubscription::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) serialize to a stream
/// - _wsnt__PauseSubscription* _wsnt__PauseSubscription::soap_dup(soap*) returns deep copy of _wsnt__PauseSubscription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__PauseSubscription::soap_del() deep deletes _wsnt__PauseSubscription data members, use only after _wsnt__PauseSubscription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__PauseSubscription::soap_type() returns SOAP_TYPE__wsnt__PauseSubscription or derived type identifier
class _wsnt__PauseSubscription {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// @note class _wsnt__PauseSubscriptionResponse operations:
/// - _wsnt__PauseSubscriptionResponse* soap_new__wsnt__PauseSubscriptionResponse(soap*) allocate and default initialize
/// - _wsnt__PauseSubscriptionResponse* soap_new__wsnt__PauseSubscriptionResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__PauseSubscriptionResponse* soap_new_req__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set required members
/// - _wsnt__PauseSubscriptionResponse* soap_new_set__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set all public members
/// - _wsnt__PauseSubscriptionResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) serialize to a stream
/// - _wsnt__PauseSubscriptionResponse* _wsnt__PauseSubscriptionResponse::soap_dup(soap*) returns deep copy of _wsnt__PauseSubscriptionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__PauseSubscriptionResponse::soap_del() deep deletes _wsnt__PauseSubscriptionResponse data members, use only after _wsnt__PauseSubscriptionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__PauseSubscriptionResponse::soap_type() returns SOAP_TYPE__wsnt__PauseSubscriptionResponse or derived type identifier
class _wsnt__PauseSubscriptionResponse {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// @note class _wsnt__ResumeSubscription operations:
/// - _wsnt__ResumeSubscription* soap_new__wsnt__ResumeSubscription(soap*) allocate and default initialize
/// - _wsnt__ResumeSubscription* soap_new__wsnt__ResumeSubscription(soap*, int num) allocate and default initialize an array
/// - _wsnt__ResumeSubscription* soap_new_req__wsnt__ResumeSubscription(soap*, ...) allocate, set required members
/// - _wsnt__ResumeSubscription* soap_new_set__wsnt__ResumeSubscription(soap*, ...) allocate, set all public members
/// - _wsnt__ResumeSubscription::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) serialize to a stream
/// - _wsnt__ResumeSubscription* _wsnt__ResumeSubscription::soap_dup(soap*) returns deep copy of _wsnt__ResumeSubscription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__ResumeSubscription::soap_del() deep deletes _wsnt__ResumeSubscription data members, use only after _wsnt__ResumeSubscription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__ResumeSubscription::soap_type() returns SOAP_TYPE__wsnt__ResumeSubscription or derived type identifier
class _wsnt__ResumeSubscription {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// @note class _wsnt__ResumeSubscriptionResponse operations:
/// - _wsnt__ResumeSubscriptionResponse* soap_new__wsnt__ResumeSubscriptionResponse(soap*) allocate and default initialize
/// - _wsnt__ResumeSubscriptionResponse* soap_new__wsnt__ResumeSubscriptionResponse(soap*, int num) allocate and default initialize an array
/// - _wsnt__ResumeSubscriptionResponse* soap_new_req__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set required members
/// - _wsnt__ResumeSubscriptionResponse* soap_new_set__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set all public members
/// - _wsnt__ResumeSubscriptionResponse::soap_default(soap*) default initialize members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) serialize to a stream
/// - _wsnt__ResumeSubscriptionResponse* _wsnt__ResumeSubscriptionResponse::soap_dup(soap*) returns deep copy of _wsnt__ResumeSubscriptionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wsnt__ResumeSubscriptionResponse::soap_del() deep deletes _wsnt__ResumeSubscriptionResponse data members, use only after _wsnt__ResumeSubscriptionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wsnt__ResumeSubscriptionResponse::soap_type() returns SOAP_TYPE__wsnt__ResumeSubscriptionResponse or derived type identifier
class _wsnt__ResumeSubscriptionResponse {
 public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// @note class wstop__Documentation operations:
/// - wstop__Documentation* soap_new_wstop__Documentation(soap*) allocate and default initialize
/// - wstop__Documentation* soap_new_wstop__Documentation(soap*, int num) allocate and default initialize an array
/// - wstop__Documentation* soap_new_req_wstop__Documentation(soap*, ...) allocate, set required members
/// - wstop__Documentation* soap_new_set_wstop__Documentation(soap*, ...) allocate, set all public members
/// - wstop__Documentation::soap_default(soap*) default initialize members
/// - int soap_read_wstop__Documentation(soap*, wstop__Documentation*) deserialize from a stream
/// - int soap_write_wstop__Documentation(soap*, wstop__Documentation*) serialize to a stream
/// - wstop__Documentation* wstop__Documentation::soap_dup(soap*) returns deep copy of wstop__Documentation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__Documentation::soap_del() deep deletes wstop__Documentation data members, use only after wstop__Documentation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__Documentation::soap_type() returns SOAP_TYPE_wstop__Documentation or derived type identifier
class wstop__Documentation {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
  xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType as wstop__TopicNamespaceType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicType as wstop__TopicType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicSetType as wstop__TopicSetType
///
/// @note class wstop__ExtensibleDocumented operations:
/// - wstop__ExtensibleDocumented* soap_new_wstop__ExtensibleDocumented(soap*) allocate and default initialize
/// - wstop__ExtensibleDocumented* soap_new_wstop__ExtensibleDocumented(soap*, int num) allocate and default initialize an array
/// - wstop__ExtensibleDocumented* soap_new_req_wstop__ExtensibleDocumented(soap*, ...) allocate, set required members
/// - wstop__ExtensibleDocumented* soap_new_set_wstop__ExtensibleDocumented(soap*, ...) allocate, set all public members
/// - wstop__ExtensibleDocumented::soap_default(soap*) default initialize members
/// - int soap_read_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) deserialize from a stream
/// - int soap_write_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) serialize to a stream
/// - wstop__ExtensibleDocumented* wstop__ExtensibleDocumented::soap_dup(soap*) returns deep copy of wstop__ExtensibleDocumented, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__ExtensibleDocumented::soap_del() deep deletes wstop__ExtensibleDocumented data members, use only after wstop__ExtensibleDocumented::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__ExtensibleDocumented::soap_type() returns SOAP_TYPE_wstop__ExtensibleDocumented or derived type identifier
class wstop__ExtensibleDocumented {
 public:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
  wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// @note class wstop__QueryExpressionType operations:
/// - wstop__QueryExpressionType* soap_new_wstop__QueryExpressionType(soap*) allocate and default initialize
/// - wstop__QueryExpressionType* soap_new_wstop__QueryExpressionType(soap*, int num) allocate and default initialize an array
/// - wstop__QueryExpressionType* soap_new_req_wstop__QueryExpressionType(soap*, ...) allocate, set required members
/// - wstop__QueryExpressionType* soap_new_set_wstop__QueryExpressionType(soap*, ...) allocate, set all public members
/// - wstop__QueryExpressionType::soap_default(soap*) default initialize members
/// - int soap_read_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) serialize to a stream
/// - wstop__QueryExpressionType* wstop__QueryExpressionType::soap_dup(soap*) returns deep copy of wstop__QueryExpressionType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__QueryExpressionType::soap_del() deep deletes wstop__QueryExpressionType data members, use only after wstop__QueryExpressionType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__QueryExpressionType::soap_type() returns SOAP_TYPE_wstop__QueryExpressionType or derived type identifier
class wstop__QueryExpressionType {
 public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
  xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
/// Pointer to soap context that manages this instance.
  struct soap                         *soap                          ;
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsrfr__ResourceUnknownFaultType operations:
/// - wsrfr__ResourceUnknownFaultType* soap_new_wsrfr__ResourceUnknownFaultType(soap*) allocate and default initialize
/// - wsrfr__ResourceUnknownFaultType* soap_new_wsrfr__ResourceUnknownFaultType(soap*, int num) allocate and default initialize an array
/// - wsrfr__ResourceUnknownFaultType* soap_new_req_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set required members
/// - wsrfr__ResourceUnknownFaultType* soap_new_set_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set all public members
/// - wsrfr__ResourceUnknownFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsrfr__ResourceUnknownFaultType(soap*, wsrfr__ResourceUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnknownFaultType(soap*, wsrfr__ResourceUnknownFaultType*) serialize to a stream
/// - wsrfr__ResourceUnknownFaultType* wsrfr__ResourceUnknownFaultType::soap_dup(soap*) returns deep copy of wsrfr__ResourceUnknownFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsrfr__ResourceUnknownFaultType::soap_del() deep deletes wsrfr__ResourceUnknownFaultType data members, use only after wsrfr__ResourceUnknownFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsrfr__ResourceUnknownFaultType::soap_type() returns SOAP_TYPE_wsrfr__ResourceUnknownFaultType or derived type identifier
class wsrfr__ResourceUnknownFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__ResourceUnknownFaultType_ErrorCode operations:
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode* soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode* soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode* soap_new_req__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode* soap_new_set__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode* _wsrfbf__ResourceUnknownFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnknownFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnknownFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__ResourceUnknownFaultType_ErrorCode data members, use only after _wsrfbf__ResourceUnknownFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnknownFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnknownFaultType_ErrorCode or derived type identifier
      class _wsrfbf__ResourceUnknownFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__ResourceUnknownFaultType_Description operations:
  /// - _wsrfbf__ResourceUnknownFaultType_Description* soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnknownFaultType_Description* soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnknownFaultType_Description* soap_new_req__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnknownFaultType_Description* soap_new_set__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnknownFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnknownFaultType_Description(soap*, _wsrfbf__ResourceUnknownFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnknownFaultType_Description(soap*, _wsrfbf__ResourceUnknownFaultType_Description*) serialize to a stream
  /// - _wsrfbf__ResourceUnknownFaultType_Description* _wsrfbf__ResourceUnknownFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnknownFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnknownFaultType_Description::soap_del() deep deletes _wsrfbf__ResourceUnknownFaultType_Description data members, use only after _wsrfbf__ResourceUnknownFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnknownFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnknownFaultType_Description or derived type identifier
      class _wsrfbf__ResourceUnknownFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__ResourceUnknownFaultType_FaultCause operations:
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause* soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause* soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause* soap_new_req__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause* soap_new_set__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, _wsrfbf__ResourceUnknownFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, _wsrfbf__ResourceUnknownFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause* _wsrfbf__ResourceUnknownFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnknownFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnknownFaultType_FaultCause::soap_del() deep deletes _wsrfbf__ResourceUnknownFaultType_FaultCause data members, use only after _wsrfbf__ResourceUnknownFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnknownFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnknownFaultType_FaultCause or derived type identifier
      class _wsrfbf__ResourceUnknownFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsrfr__ResourceUnavailableFaultType operations:
/// - wsrfr__ResourceUnavailableFaultType* soap_new_wsrfr__ResourceUnavailableFaultType(soap*) allocate and default initialize
/// - wsrfr__ResourceUnavailableFaultType* soap_new_wsrfr__ResourceUnavailableFaultType(soap*, int num) allocate and default initialize an array
/// - wsrfr__ResourceUnavailableFaultType* soap_new_req_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set required members
/// - wsrfr__ResourceUnavailableFaultType* soap_new_set_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set all public members
/// - wsrfr__ResourceUnavailableFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsrfr__ResourceUnavailableFaultType(soap*, wsrfr__ResourceUnavailableFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnavailableFaultType(soap*, wsrfr__ResourceUnavailableFaultType*) serialize to a stream
/// - wsrfr__ResourceUnavailableFaultType* wsrfr__ResourceUnavailableFaultType::soap_dup(soap*) returns deep copy of wsrfr__ResourceUnavailableFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsrfr__ResourceUnavailableFaultType::soap_del() deep deletes wsrfr__ResourceUnavailableFaultType data members, use only after wsrfr__ResourceUnavailableFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsrfr__ResourceUnavailableFaultType::soap_type() returns SOAP_TYPE_wsrfr__ResourceUnavailableFaultType or derived type identifier
class wsrfr__ResourceUnavailableFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__ResourceUnavailableFaultType_ErrorCode operations:
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode* soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode* soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode* soap_new_req__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode* soap_new_set__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode* _wsrfbf__ResourceUnavailableFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnavailableFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnavailableFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__ResourceUnavailableFaultType_ErrorCode data members, use only after _wsrfbf__ResourceUnavailableFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnavailableFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnavailableFaultType_ErrorCode or derived type identifier
      class _wsrfbf__ResourceUnavailableFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__ResourceUnavailableFaultType_Description operations:
  /// - _wsrfbf__ResourceUnavailableFaultType_Description* soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnavailableFaultType_Description* soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnavailableFaultType_Description* soap_new_req__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnavailableFaultType_Description* soap_new_set__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnavailableFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnavailableFaultType_Description(soap*, _wsrfbf__ResourceUnavailableFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnavailableFaultType_Description(soap*, _wsrfbf__ResourceUnavailableFaultType_Description*) serialize to a stream
  /// - _wsrfbf__ResourceUnavailableFaultType_Description* _wsrfbf__ResourceUnavailableFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnavailableFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnavailableFaultType_Description::soap_del() deep deletes _wsrfbf__ResourceUnavailableFaultType_Description data members, use only after _wsrfbf__ResourceUnavailableFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnavailableFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnavailableFaultType_Description or derived type identifier
      class _wsrfbf__ResourceUnavailableFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__ResourceUnavailableFaultType_FaultCause operations:
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause* soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause* soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause* soap_new_req__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause* soap_new_set__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause* _wsrfbf__ResourceUnavailableFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__ResourceUnavailableFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResourceUnavailableFaultType_FaultCause::soap_del() deep deletes _wsrfbf__ResourceUnavailableFaultType_FaultCause data members, use only after _wsrfbf__ResourceUnavailableFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResourceUnavailableFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__ResourceUnavailableFaultType_FaultCause or derived type identifier
      class _wsrfbf__ResourceUnavailableFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__SubscribeCreationFailedFaultType operations:
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_wsnt__SubscribeCreationFailedFaultType(soap*) allocate and default initialize
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_wsnt__SubscribeCreationFailedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_req_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set required members
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_set_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__SubscribeCreationFailedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) serialize to a stream
/// - wsnt__SubscribeCreationFailedFaultType* wsnt__SubscribeCreationFailedFaultType::soap_dup(soap*) returns deep copy of wsnt__SubscribeCreationFailedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__SubscribeCreationFailedFaultType::soap_del() deep deletes wsnt__SubscribeCreationFailedFaultType data members, use only after wsnt__SubscribeCreationFailedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__SubscribeCreationFailedFaultType::soap_type() returns SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType or derived type identifier
class wsnt__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode operations:
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode* soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode* soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode* soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode* soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode* _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode data members, use only after _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__SubscribeCreationFailedFaultType_Description operations:
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description* soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description* soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description* soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description* soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, _wsrfbf__SubscribeCreationFailedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, _wsrfbf__SubscribeCreationFailedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description* _wsrfbf__SubscribeCreationFailedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__SubscribeCreationFailedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__SubscribeCreationFailedFaultType_Description::soap_del() deep deletes _wsrfbf__SubscribeCreationFailedFaultType_Description data members, use only after _wsrfbf__SubscribeCreationFailedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__SubscribeCreationFailedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__SubscribeCreationFailedFaultType_Description or derived type identifier
      class _wsrfbf__SubscribeCreationFailedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause operations:
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause* soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause* soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause* soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause* soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause* _wsrfbf__SubscribeCreationFailedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__SubscribeCreationFailedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__SubscribeCreationFailedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__SubscribeCreationFailedFaultType_FaultCause data members, use only after _wsrfbf__SubscribeCreationFailedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__SubscribeCreationFailedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__SubscribeCreationFailedFaultType_FaultCause or derived type identifier
      class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__InvalidFilterFaultType operations:
/// - wsnt__InvalidFilterFaultType* soap_new_wsnt__InvalidFilterFaultType(soap*) allocate and default initialize
/// - wsnt__InvalidFilterFaultType* soap_new_wsnt__InvalidFilterFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__InvalidFilterFaultType* soap_new_req_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set required members
/// - wsnt__InvalidFilterFaultType* soap_new_set_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set all public members
/// - wsnt__InvalidFilterFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) serialize to a stream
/// - wsnt__InvalidFilterFaultType* wsnt__InvalidFilterFaultType::soap_dup(soap*) returns deep copy of wsnt__InvalidFilterFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__InvalidFilterFaultType::soap_del() deep deletes wsnt__InvalidFilterFaultType data members, use only after wsnt__InvalidFilterFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__InvalidFilterFaultType::soap_type() returns SOAP_TYPE_wsnt__InvalidFilterFaultType or derived type identifier
class wsnt__InvalidFilterFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__InvalidFilterFaultType_ErrorCode operations:
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode* soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode* soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode* soap_new_req__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode* soap_new_set__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, _wsrfbf__InvalidFilterFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, _wsrfbf__InvalidFilterFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode* _wsrfbf__InvalidFilterFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidFilterFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidFilterFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__InvalidFilterFaultType_ErrorCode data members, use only after _wsrfbf__InvalidFilterFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidFilterFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__InvalidFilterFaultType_ErrorCode or derived type identifier
      class _wsrfbf__InvalidFilterFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__InvalidFilterFaultType_Description operations:
  /// - _wsrfbf__InvalidFilterFaultType_Description* soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidFilterFaultType_Description* soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidFilterFaultType_Description* soap_new_req__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidFilterFaultType_Description* soap_new_set__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidFilterFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidFilterFaultType_Description(soap*, _wsrfbf__InvalidFilterFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidFilterFaultType_Description(soap*, _wsrfbf__InvalidFilterFaultType_Description*) serialize to a stream
  /// - _wsrfbf__InvalidFilterFaultType_Description* _wsrfbf__InvalidFilterFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidFilterFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidFilterFaultType_Description::soap_del() deep deletes _wsrfbf__InvalidFilterFaultType_Description data members, use only after _wsrfbf__InvalidFilterFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidFilterFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__InvalidFilterFaultType_Description or derived type identifier
      class _wsrfbf__InvalidFilterFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__InvalidFilterFaultType_FaultCause operations:
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause* soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause* soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause* soap_new_req__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause* soap_new_set__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, _wsrfbf__InvalidFilterFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, _wsrfbf__InvalidFilterFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause* _wsrfbf__InvalidFilterFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidFilterFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidFilterFaultType_FaultCause::soap_del() deep deletes _wsrfbf__InvalidFilterFaultType_FaultCause data members, use only after _wsrfbf__InvalidFilterFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidFilterFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__InvalidFilterFaultType_FaultCause or derived type identifier
      class _wsrfbf__InvalidFilterFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 1..unbounded.
  std::vector<xsd__QName             > UnknownFilter                  1;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*) allocate and default initialize
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_req_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set required members
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_set_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set all public members
/// - wsnt__TopicExpressionDialectUnknownFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a stream
/// - wsnt__TopicExpressionDialectUnknownFaultType* wsnt__TopicExpressionDialectUnknownFaultType::soap_dup(soap*) returns deep copy of wsnt__TopicExpressionDialectUnknownFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__TopicExpressionDialectUnknownFaultType::soap_del() deep deletes wsnt__TopicExpressionDialectUnknownFaultType data members, use only after wsnt__TopicExpressionDialectUnknownFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__TopicExpressionDialectUnknownFaultType::soap_type() returns SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType or derived type identifier
class wsnt__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode* _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode data members, use only after _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode or derived type identifier
      class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description operations:
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description* soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description* soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) serialize to a stream
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description* _wsrfbf__TopicExpressionDialectUnknownFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__TopicExpressionDialectUnknownFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_Description::soap_del() deep deletes _wsrfbf__TopicExpressionDialectUnknownFaultType_Description data members, use only after _wsrfbf__TopicExpressionDialectUnknownFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicExpressionDialectUnknownFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__TopicExpressionDialectUnknownFaultType_Description or derived type identifier
      class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause operations:
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause* _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause::soap_del() deep deletes _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause data members, use only after _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause or derived type identifier
      class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__InvalidTopicExpressionFaultType operations:
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_wsnt__InvalidTopicExpressionFaultType(soap*) allocate and default initialize
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_wsnt__InvalidTopicExpressionFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_req_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set required members
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_set_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set all public members
/// - wsnt__InvalidTopicExpressionFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) serialize to a stream
/// - wsnt__InvalidTopicExpressionFaultType* wsnt__InvalidTopicExpressionFaultType::soap_dup(soap*) returns deep copy of wsnt__InvalidTopicExpressionFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__InvalidTopicExpressionFaultType::soap_del() deep deletes wsnt__InvalidTopicExpressionFaultType data members, use only after wsnt__InvalidTopicExpressionFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__InvalidTopicExpressionFaultType::soap_type() returns SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType or derived type identifier
class wsnt__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode operations:
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode* soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode* soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode* _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode data members, use only after _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode or derived type identifier
      class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__InvalidTopicExpressionFaultType_Description operations:
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description* soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description* soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description* soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description* soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, _wsrfbf__InvalidTopicExpressionFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, _wsrfbf__InvalidTopicExpressionFaultType_Description*) serialize to a stream
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description* _wsrfbf__InvalidTopicExpressionFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidTopicExpressionFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidTopicExpressionFaultType_Description::soap_del() deep deletes _wsrfbf__InvalidTopicExpressionFaultType_Description data members, use only after _wsrfbf__InvalidTopicExpressionFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidTopicExpressionFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__InvalidTopicExpressionFaultType_Description or derived type identifier
      class _wsrfbf__InvalidTopicExpressionFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause operations:
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause* soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause* soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause* _wsrfbf__InvalidTopicExpressionFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidTopicExpressionFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidTopicExpressionFaultType_FaultCause::soap_del() deep deletes _wsrfbf__InvalidTopicExpressionFaultType_FaultCause data members, use only after _wsrfbf__InvalidTopicExpressionFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidTopicExpressionFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__InvalidTopicExpressionFaultType_FaultCause or derived type identifier
      class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__TopicNotSupportedFaultType operations:
/// - wsnt__TopicNotSupportedFaultType* soap_new_wsnt__TopicNotSupportedFaultType(soap*) allocate and default initialize
/// - wsnt__TopicNotSupportedFaultType* soap_new_wsnt__TopicNotSupportedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__TopicNotSupportedFaultType* soap_new_req_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set required members
/// - wsnt__TopicNotSupportedFaultType* soap_new_set_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__TopicNotSupportedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) serialize to a stream
/// - wsnt__TopicNotSupportedFaultType* wsnt__TopicNotSupportedFaultType::soap_dup(soap*) returns deep copy of wsnt__TopicNotSupportedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__TopicNotSupportedFaultType::soap_del() deep deletes wsnt__TopicNotSupportedFaultType data members, use only after wsnt__TopicNotSupportedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__TopicNotSupportedFaultType::soap_type() returns SOAP_TYPE_wsnt__TopicNotSupportedFaultType or derived type identifier
class wsnt__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__TopicNotSupportedFaultType_ErrorCode operations:
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode* soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode* soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode* soap_new_req__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode* soap_new_set__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode* _wsrfbf__TopicNotSupportedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__TopicNotSupportedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicNotSupportedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__TopicNotSupportedFaultType_ErrorCode data members, use only after _wsrfbf__TopicNotSupportedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicNotSupportedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__TopicNotSupportedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__TopicNotSupportedFaultType_Description operations:
  /// - _wsrfbf__TopicNotSupportedFaultType_Description* soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__TopicNotSupportedFaultType_Description* soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicNotSupportedFaultType_Description* soap_new_req__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicNotSupportedFaultType_Description* soap_new_set__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicNotSupportedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicNotSupportedFaultType_Description(soap*, _wsrfbf__TopicNotSupportedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicNotSupportedFaultType_Description(soap*, _wsrfbf__TopicNotSupportedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__TopicNotSupportedFaultType_Description* _wsrfbf__TopicNotSupportedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__TopicNotSupportedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicNotSupportedFaultType_Description::soap_del() deep deletes _wsrfbf__TopicNotSupportedFaultType_Description data members, use only after _wsrfbf__TopicNotSupportedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicNotSupportedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__TopicNotSupportedFaultType_Description or derived type identifier
      class _wsrfbf__TopicNotSupportedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__TopicNotSupportedFaultType_FaultCause operations:
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause* soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause* soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause* soap_new_req__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause* soap_new_set__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause* _wsrfbf__TopicNotSupportedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__TopicNotSupportedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__TopicNotSupportedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__TopicNotSupportedFaultType_FaultCause data members, use only after _wsrfbf__TopicNotSupportedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__TopicNotSupportedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__TopicNotSupportedFaultType_FaultCause or derived type identifier
      class _wsrfbf__TopicNotSupportedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*) allocate and default initialize
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_req_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set required members
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_set_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__MultipleTopicsSpecifiedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a stream
/// - wsnt__MultipleTopicsSpecifiedFaultType* wsnt__MultipleTopicsSpecifiedFaultType::soap_dup(soap*) returns deep copy of wsnt__MultipleTopicsSpecifiedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__MultipleTopicsSpecifiedFaultType::soap_del() deep deletes wsnt__MultipleTopicsSpecifiedFaultType data members, use only after wsnt__MultipleTopicsSpecifiedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__MultipleTopicsSpecifiedFaultType::soap_type() returns SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType or derived type identifier
class wsnt__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode* _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode data members, use only after _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description operations:
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description* soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description* soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description* _wsrfbf__MultipleTopicsSpecifiedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__MultipleTopicsSpecifiedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_Description::soap_del() deep deletes _wsrfbf__MultipleTopicsSpecifiedFaultType_Description data members, use only after _wsrfbf__MultipleTopicsSpecifiedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__MultipleTopicsSpecifiedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__MultipleTopicsSpecifiedFaultType_Description or derived type identifier
      class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause operations:
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause* _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause data members, use only after _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause or derived type identifier
      class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*) allocate and default initialize
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_req_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set required members
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_set_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set all public members
/// - wsnt__InvalidProducerPropertiesExpressionFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a stream
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* wsnt__InvalidProducerPropertiesExpressionFaultType::soap_dup(soap*) returns deep copy of wsnt__InvalidProducerPropertiesExpressionFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__InvalidProducerPropertiesExpressionFaultType::soap_del() deep deletes wsnt__InvalidProducerPropertiesExpressionFaultType data members, use only after wsnt__InvalidProducerPropertiesExpressionFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__InvalidProducerPropertiesExpressionFaultType::soap_type() returns SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType or derived type identifier
class wsnt__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode* _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode data members, use only after _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode or derived type identifier
      class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description operations:
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description* soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description* soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a stream
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description* _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description::soap_del() deep deletes _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description data members, use only after _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description or derived type identifier
      class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause* _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause::soap_del() deep deletes _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause data members, use only after _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause or derived type identifier
      class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__InvalidMessageContentExpressionFaultType operations:
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*) allocate and default initialize
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_req_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set required members
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_set_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set all public members
/// - wsnt__InvalidMessageContentExpressionFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a stream
/// - wsnt__InvalidMessageContentExpressionFaultType* wsnt__InvalidMessageContentExpressionFaultType::soap_dup(soap*) returns deep copy of wsnt__InvalidMessageContentExpressionFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__InvalidMessageContentExpressionFaultType::soap_del() deep deletes wsnt__InvalidMessageContentExpressionFaultType data members, use only after wsnt__InvalidMessageContentExpressionFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__InvalidMessageContentExpressionFaultType::soap_type() returns SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType or derived type identifier
class wsnt__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode operations:
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode* _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode data members, use only after _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode or derived type identifier
      class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__InvalidMessageContentExpressionFaultType_Description operations:
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description* soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description* soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) serialize to a stream
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description* _wsrfbf__InvalidMessageContentExpressionFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidMessageContentExpressionFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_Description::soap_del() deep deletes _wsrfbf__InvalidMessageContentExpressionFaultType_Description data members, use only after _wsrfbf__InvalidMessageContentExpressionFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidMessageContentExpressionFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__InvalidMessageContentExpressionFaultType_Description or derived type identifier
      class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause operations:
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause* soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause* soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause* soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause* _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause::soap_del() deep deletes _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause data members, use only after _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause or derived type identifier
      class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*) allocate and default initialize
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_req_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_set_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnrecognizedPolicyRequestFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a stream
/// - wsnt__UnrecognizedPolicyRequestFaultType* wsnt__UnrecognizedPolicyRequestFaultType::soap_dup(soap*) returns deep copy of wsnt__UnrecognizedPolicyRequestFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnrecognizedPolicyRequestFaultType::soap_del() deep deletes wsnt__UnrecognizedPolicyRequestFaultType data members, use only after wsnt__UnrecognizedPolicyRequestFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnrecognizedPolicyRequestFaultType::soap_type() returns SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType or derived type identifier
class wsnt__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode* _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode data members, use only after _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description operations:
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description* soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description* soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description* _wsrfbf__UnrecognizedPolicyRequestFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnrecognizedPolicyRequestFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_Description::soap_del() deep deletes _wsrfbf__UnrecognizedPolicyRequestFaultType_Description data members, use only after _wsrfbf__UnrecognizedPolicyRequestFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnrecognizedPolicyRequestFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnrecognizedPolicyRequestFaultType_Description or derived type identifier
      class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause operations:
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause* _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause data members, use only after _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
  std::vector<xsd__QName             > UnrecognizedPolicy             0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnsupportedPolicyRequestFaultType operations:
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*) allocate and default initialize
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_req_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_set_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnsupportedPolicyRequestFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a stream
/// - wsnt__UnsupportedPolicyRequestFaultType* wsnt__UnsupportedPolicyRequestFaultType::soap_dup(soap*) returns deep copy of wsnt__UnsupportedPolicyRequestFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnsupportedPolicyRequestFaultType::soap_del() deep deletes wsnt__UnsupportedPolicyRequestFaultType data members, use only after wsnt__UnsupportedPolicyRequestFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnsupportedPolicyRequestFaultType::soap_type() returns SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType or derived type identifier
class wsnt__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode operations:
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode* _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode data members, use only after _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnsupportedPolicyRequestFaultType_Description operations:
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description* soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description* soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description* _wsrfbf__UnsupportedPolicyRequestFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnsupportedPolicyRequestFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_Description::soap_del() deep deletes _wsrfbf__UnsupportedPolicyRequestFaultType_Description data members, use only after _wsrfbf__UnsupportedPolicyRequestFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnsupportedPolicyRequestFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnsupportedPolicyRequestFaultType_Description or derived type identifier
      class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause operations:
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause* soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause* soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause* soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause* _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause data members, use only after _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
  std::vector<xsd__QName             > UnsupportedPolicy              0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__NotifyMessageNotSupportedFaultType operations:
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*) allocate and default initialize
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_req_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set required members
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_set_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__NotifyMessageNotSupportedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a stream
/// - wsnt__NotifyMessageNotSupportedFaultType* wsnt__NotifyMessageNotSupportedFaultType::soap_dup(soap*) returns deep copy of wsnt__NotifyMessageNotSupportedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__NotifyMessageNotSupportedFaultType::soap_del() deep deletes wsnt__NotifyMessageNotSupportedFaultType data members, use only after wsnt__NotifyMessageNotSupportedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__NotifyMessageNotSupportedFaultType::soap_type() returns SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType or derived type identifier
class wsnt__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode operations:
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode* _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode data members, use only after _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__NotifyMessageNotSupportedFaultType_Description operations:
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description* soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description* soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description* _wsrfbf__NotifyMessageNotSupportedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__NotifyMessageNotSupportedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_Description::soap_del() deep deletes _wsrfbf__NotifyMessageNotSupportedFaultType_Description data members, use only after _wsrfbf__NotifyMessageNotSupportedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NotifyMessageNotSupportedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__NotifyMessageNotSupportedFaultType_Description or derived type identifier
      class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause operations:
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause* soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause* soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause* soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause* _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause data members, use only after _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause or derived type identifier
      class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*) allocate and default initialize
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_req_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_set_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnacceptableInitialTerminationTimeFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a stream
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* wsnt__UnacceptableInitialTerminationTimeFaultType::soap_dup(soap*) returns deep copy of wsnt__UnacceptableInitialTerminationTimeFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnacceptableInitialTerminationTimeFaultType::soap_del() deep deletes wsnt__UnacceptableInitialTerminationTimeFaultType data members, use only after wsnt__UnacceptableInitialTerminationTimeFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnacceptableInitialTerminationTimeFaultType::soap_type() returns SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType or derived type identifier
class wsnt__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode* _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode data members, use only after _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description operations:
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description* soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description* soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description* _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description::soap_del() deep deletes _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description data members, use only after _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description or derived type identifier
      class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause* _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause data members, use only after _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of type xs:dateTime.
  time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
  time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*) allocate and default initialize
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_req_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set required members
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_set_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set all public members
/// - wsnt__NoCurrentMessageOnTopicFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a stream
/// - wsnt__NoCurrentMessageOnTopicFaultType* wsnt__NoCurrentMessageOnTopicFaultType::soap_dup(soap*) returns deep copy of wsnt__NoCurrentMessageOnTopicFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__NoCurrentMessageOnTopicFaultType::soap_del() deep deletes wsnt__NoCurrentMessageOnTopicFaultType data members, use only after wsnt__NoCurrentMessageOnTopicFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__NoCurrentMessageOnTopicFaultType::soap_type() returns SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType or derived type identifier
class wsnt__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode* _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode data members, use only after _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode or derived type identifier
      class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description operations:
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description* soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description* soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) serialize to a stream
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description* _wsrfbf__NoCurrentMessageOnTopicFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__NoCurrentMessageOnTopicFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_Description::soap_del() deep deletes _wsrfbf__NoCurrentMessageOnTopicFaultType_Description data members, use only after _wsrfbf__NoCurrentMessageOnTopicFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NoCurrentMessageOnTopicFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__NoCurrentMessageOnTopicFaultType_Description or derived type identifier
      class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause operations:
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause* _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause::soap_del() deep deletes _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause data members, use only after _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause or derived type identifier
      class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnableToGetMessagesFaultType operations:
/// - wsnt__UnableToGetMessagesFaultType* soap_new_wsnt__UnableToGetMessagesFaultType(soap*) allocate and default initialize
/// - wsnt__UnableToGetMessagesFaultType* soap_new_wsnt__UnableToGetMessagesFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnableToGetMessagesFaultType* soap_new_req_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnableToGetMessagesFaultType* soap_new_set_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnableToGetMessagesFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) serialize to a stream
/// - wsnt__UnableToGetMessagesFaultType* wsnt__UnableToGetMessagesFaultType::soap_dup(soap*) returns deep copy of wsnt__UnableToGetMessagesFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnableToGetMessagesFaultType::soap_del() deep deletes wsnt__UnableToGetMessagesFaultType data members, use only after wsnt__UnableToGetMessagesFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnableToGetMessagesFaultType::soap_type() returns SOAP_TYPE_wsnt__UnableToGetMessagesFaultType or derived type identifier
class wsnt__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode operations:
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode* soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode* soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode* soap_new_req__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode* soap_new_set__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode* _wsrfbf__UnableToGetMessagesFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToGetMessagesFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToGetMessagesFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnableToGetMessagesFaultType_ErrorCode data members, use only after _wsrfbf__UnableToGetMessagesFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToGetMessagesFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnableToGetMessagesFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnableToGetMessagesFaultType_Description operations:
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description* soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description* soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description* soap_new_req__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description* soap_new_set__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, _wsrfbf__UnableToGetMessagesFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, _wsrfbf__UnableToGetMessagesFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description* _wsrfbf__UnableToGetMessagesFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToGetMessagesFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToGetMessagesFaultType_Description::soap_del() deep deletes _wsrfbf__UnableToGetMessagesFaultType_Description data members, use only after _wsrfbf__UnableToGetMessagesFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToGetMessagesFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnableToGetMessagesFaultType_Description or derived type identifier
      class _wsrfbf__UnableToGetMessagesFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnableToGetMessagesFaultType_FaultCause operations:
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause* soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause* soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause* soap_new_req__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause* soap_new_set__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause* _wsrfbf__UnableToGetMessagesFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToGetMessagesFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToGetMessagesFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnableToGetMessagesFaultType_FaultCause data members, use only after _wsrfbf__UnableToGetMessagesFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToGetMessagesFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnableToGetMessagesFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnableToDestroyPullPointFaultType operations:
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*) allocate and default initialize
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_req_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_set_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnableToDestroyPullPointFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) serialize to a stream
/// - wsnt__UnableToDestroyPullPointFaultType* wsnt__UnableToDestroyPullPointFaultType::soap_dup(soap*) returns deep copy of wsnt__UnableToDestroyPullPointFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnableToDestroyPullPointFaultType::soap_del() deep deletes wsnt__UnableToDestroyPullPointFaultType data members, use only after wsnt__UnableToDestroyPullPointFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnableToDestroyPullPointFaultType::soap_type() returns SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType or derived type identifier
class wsnt__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode operations:
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode* soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode* soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode* _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode data members, use only after _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnableToDestroyPullPointFaultType_Description operations:
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description* soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description* soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description* _wsrfbf__UnableToDestroyPullPointFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroyPullPointFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_Description::soap_del() deep deletes _wsrfbf__UnableToDestroyPullPointFaultType_Description data members, use only after _wsrfbf__UnableToDestroyPullPointFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroyPullPointFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroyPullPointFaultType_Description or derived type identifier
      class _wsrfbf__UnableToDestroyPullPointFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause operations:
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause* soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause* soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause* soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause* _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause data members, use only after _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnableToCreatePullPointFaultType operations:
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_wsnt__UnableToCreatePullPointFaultType(soap*) allocate and default initialize
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_wsnt__UnableToCreatePullPointFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_req_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_set_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnableToCreatePullPointFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) serialize to a stream
/// - wsnt__UnableToCreatePullPointFaultType* wsnt__UnableToCreatePullPointFaultType::soap_dup(soap*) returns deep copy of wsnt__UnableToCreatePullPointFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnableToCreatePullPointFaultType::soap_del() deep deletes wsnt__UnableToCreatePullPointFaultType data members, use only after wsnt__UnableToCreatePullPointFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnableToCreatePullPointFaultType::soap_type() returns SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType or derived type identifier
class wsnt__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode operations:
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode* soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode* soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode* soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode* soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode* _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode data members, use only after _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnableToCreatePullPointFaultType_Description operations:
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description* soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description* soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description* soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description* soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, _wsrfbf__UnableToCreatePullPointFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, _wsrfbf__UnableToCreatePullPointFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description* _wsrfbf__UnableToCreatePullPointFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToCreatePullPointFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToCreatePullPointFaultType_Description::soap_del() deep deletes _wsrfbf__UnableToCreatePullPointFaultType_Description data members, use only after _wsrfbf__UnableToCreatePullPointFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToCreatePullPointFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnableToCreatePullPointFaultType_Description or derived type identifier
      class _wsrfbf__UnableToCreatePullPointFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause operations:
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause* soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause* soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause* soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause* soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause* _wsrfbf__UnableToCreatePullPointFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToCreatePullPointFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToCreatePullPointFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnableToCreatePullPointFaultType_FaultCause data members, use only after _wsrfbf__UnableToCreatePullPointFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToCreatePullPointFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnableToCreatePullPointFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnacceptableTerminationTimeFaultType operations:
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*) allocate and default initialize
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_req_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_set_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnacceptableTerminationTimeFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a stream
/// - wsnt__UnacceptableTerminationTimeFaultType* wsnt__UnacceptableTerminationTimeFaultType::soap_dup(soap*) returns deep copy of wsnt__UnacceptableTerminationTimeFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnacceptableTerminationTimeFaultType::soap_del() deep deletes wsnt__UnacceptableTerminationTimeFaultType data members, use only after wsnt__UnacceptableTerminationTimeFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnacceptableTerminationTimeFaultType::soap_type() returns SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType or derived type identifier
class wsnt__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode operations:
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode* _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode data members, use only after _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnacceptableTerminationTimeFaultType_Description operations:
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description* soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description* soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description* _wsrfbf__UnacceptableTerminationTimeFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableTerminationTimeFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_Description::soap_del() deep deletes _wsrfbf__UnacceptableTerminationTimeFaultType_Description data members, use only after _wsrfbf__UnacceptableTerminationTimeFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableTerminationTimeFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableTerminationTimeFaultType_Description or derived type identifier
      class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause operations:
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause* soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause* soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause* soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause* _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause data members, use only after _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of type xs:dateTime.
  time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
  time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__UnableToDestroySubscriptionFaultType operations:
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*) allocate and default initialize
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_req_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set required members
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_set_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set all public members
/// - wsnt__UnableToDestroySubscriptionFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a stream
/// - wsnt__UnableToDestroySubscriptionFaultType* wsnt__UnableToDestroySubscriptionFaultType::soap_dup(soap*) returns deep copy of wsnt__UnableToDestroySubscriptionFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__UnableToDestroySubscriptionFaultType::soap_del() deep deletes wsnt__UnableToDestroySubscriptionFaultType data members, use only after wsnt__UnableToDestroySubscriptionFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__UnableToDestroySubscriptionFaultType::soap_type() returns SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType or derived type identifier
class wsnt__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode operations:
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode* _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode data members, use only after _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode or derived type identifier
      class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__UnableToDestroySubscriptionFaultType_Description operations:
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description* soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description* soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) serialize to a stream
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description* _wsrfbf__UnableToDestroySubscriptionFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroySubscriptionFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_Description::soap_del() deep deletes _wsrfbf__UnableToDestroySubscriptionFaultType_Description data members, use only after _wsrfbf__UnableToDestroySubscriptionFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroySubscriptionFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroySubscriptionFaultType_Description or derived type identifier
      class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause operations:
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause* soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause* soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause* soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause* _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause::soap_del() deep deletes _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause data members, use only after _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause or derived type identifier
      class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__PauseFailedFaultType operations:
/// - wsnt__PauseFailedFaultType* soap_new_wsnt__PauseFailedFaultType(soap*) allocate and default initialize
/// - wsnt__PauseFailedFaultType* soap_new_wsnt__PauseFailedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__PauseFailedFaultType* soap_new_req_wsnt__PauseFailedFaultType(soap*, ...) allocate, set required members
/// - wsnt__PauseFailedFaultType* soap_new_set_wsnt__PauseFailedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__PauseFailedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) serialize to a stream
/// - wsnt__PauseFailedFaultType* wsnt__PauseFailedFaultType::soap_dup(soap*) returns deep copy of wsnt__PauseFailedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__PauseFailedFaultType::soap_del() deep deletes wsnt__PauseFailedFaultType data members, use only after wsnt__PauseFailedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__PauseFailedFaultType::soap_type() returns SOAP_TYPE_wsnt__PauseFailedFaultType or derived type identifier
class wsnt__PauseFailedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__PauseFailedFaultType_ErrorCode operations:
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode* soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode* soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode* soap_new_req__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode* soap_new_set__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, _wsrfbf__PauseFailedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, _wsrfbf__PauseFailedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode* _wsrfbf__PauseFailedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__PauseFailedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__PauseFailedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__PauseFailedFaultType_ErrorCode data members, use only after _wsrfbf__PauseFailedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__PauseFailedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__PauseFailedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__PauseFailedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__PauseFailedFaultType_Description operations:
  /// - _wsrfbf__PauseFailedFaultType_Description* soap_new__wsrfbf__PauseFailedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__PauseFailedFaultType_Description* soap_new__wsrfbf__PauseFailedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__PauseFailedFaultType_Description* soap_new_req__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__PauseFailedFaultType_Description* soap_new_set__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__PauseFailedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__PauseFailedFaultType_Description(soap*, _wsrfbf__PauseFailedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__PauseFailedFaultType_Description(soap*, _wsrfbf__PauseFailedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__PauseFailedFaultType_Description* _wsrfbf__PauseFailedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__PauseFailedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__PauseFailedFaultType_Description::soap_del() deep deletes _wsrfbf__PauseFailedFaultType_Description data members, use only after _wsrfbf__PauseFailedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__PauseFailedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__PauseFailedFaultType_Description or derived type identifier
      class _wsrfbf__PauseFailedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__PauseFailedFaultType_FaultCause operations:
  /// - _wsrfbf__PauseFailedFaultType_FaultCause* soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__PauseFailedFaultType_FaultCause* soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__PauseFailedFaultType_FaultCause* soap_new_req__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__PauseFailedFaultType_FaultCause* soap_new_set__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__PauseFailedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__PauseFailedFaultType_FaultCause(soap*, _wsrfbf__PauseFailedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__PauseFailedFaultType_FaultCause(soap*, _wsrfbf__PauseFailedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__PauseFailedFaultType_FaultCause* _wsrfbf__PauseFailedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__PauseFailedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__PauseFailedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__PauseFailedFaultType_FaultCause data members, use only after _wsrfbf__PauseFailedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__PauseFailedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__PauseFailedFaultType_FaultCause or derived type identifier
      class _wsrfbf__PauseFailedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note class wsnt__ResumeFailedFaultType operations:
/// - wsnt__ResumeFailedFaultType* soap_new_wsnt__ResumeFailedFaultType(soap*) allocate and default initialize
/// - wsnt__ResumeFailedFaultType* soap_new_wsnt__ResumeFailedFaultType(soap*, int num) allocate and default initialize an array
/// - wsnt__ResumeFailedFaultType* soap_new_req_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set required members
/// - wsnt__ResumeFailedFaultType* soap_new_set_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set all public members
/// - wsnt__ResumeFailedFaultType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) serialize to a stream
/// - wsnt__ResumeFailedFaultType* wsnt__ResumeFailedFaultType::soap_dup(soap*) returns deep copy of wsnt__ResumeFailedFaultType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__ResumeFailedFaultType::soap_del() deep deletes wsnt__ResumeFailedFaultType data members, use only after wsnt__ResumeFailedFaultType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__ResumeFailedFaultType::soap_type() returns SOAP_TYPE_wsnt__ResumeFailedFaultType or derived type identifier
class wsnt__ResumeFailedFaultType : public wsrfbf__BaseFaultType {
 public:
  /*  INHERITED FROM wsrfbf__BaseFaultType:
  /// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
  /// Size of the array of XML or DOM nodes is 0..unbounded.
      std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
  /// Element "Timestamp" of type xs:dateTime.
      time_t                               Timestamp                      1;	///< Required element.
  /// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
      wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
  /// @note class _wsrfbf__ResumeFailedFaultType_ErrorCode operations:
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode* soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*) allocate and default initialize
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode* soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode* soap_new_req__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode* soap_new_set__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, _wsrfbf__ResumeFailedFaultType_ErrorCode*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, _wsrfbf__ResumeFailedFaultType_ErrorCode*) serialize to a stream
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode* _wsrfbf__ResumeFailedFaultType_ErrorCode::soap_dup(soap*) returns deep copy of _wsrfbf__ResumeFailedFaultType_ErrorCode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResumeFailedFaultType_ErrorCode::soap_del() deep deletes _wsrfbf__ResumeFailedFaultType_ErrorCode data members, use only after _wsrfbf__ResumeFailedFaultType_ErrorCode::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResumeFailedFaultType_ErrorCode::soap_type() returns SOAP_TYPE__wsrfbf__ResumeFailedFaultType_ErrorCode or derived type identifier
      class _wsrfbf__ResumeFailedFaultType_ErrorCode
      { public:
  /// Attribute "dialect" of type xs:anyURI.
    @ xsd__anyURI                          dialect                        1;	///< Required attribute.
  /// Mixed content.
  /// @note Mixed content is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
      xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
      }                                   *ErrorCode                      0;	///< Optional element.
  /// Vector of Description of length 0..unbounded.
      std::vector<
  /// @note class _wsrfbf__ResumeFailedFaultType_Description operations:
  /// - _wsrfbf__ResumeFailedFaultType_Description* soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*) allocate and default initialize
  /// - _wsrfbf__ResumeFailedFaultType_Description* soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResumeFailedFaultType_Description* soap_new_req__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResumeFailedFaultType_Description* soap_new_set__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResumeFailedFaultType_Description::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResumeFailedFaultType_Description(soap*, _wsrfbf__ResumeFailedFaultType_Description*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResumeFailedFaultType_Description(soap*, _wsrfbf__ResumeFailedFaultType_Description*) serialize to a stream
  /// - _wsrfbf__ResumeFailedFaultType_Description* _wsrfbf__ResumeFailedFaultType_Description::soap_dup(soap*) returns deep copy of _wsrfbf__ResumeFailedFaultType_Description, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResumeFailedFaultType_Description::soap_del() deep deletes _wsrfbf__ResumeFailedFaultType_Description data members, use only after _wsrfbf__ResumeFailedFaultType_Description::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResumeFailedFaultType_Description::soap_type() returns SOAP_TYPE__wsrfbf__ResumeFailedFaultType_Description or derived type identifier
      class _wsrfbf__ResumeFailedFaultType_Description
      { public:
  /// __item wraps simpleContent of type xs:string.
      std::string                          __item                        ;
  /// Imported attribute reference xml:lang.
    @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
      }>                                   Description                    0;	///< Multiple elements.
  /// @note class _wsrfbf__ResumeFailedFaultType_FaultCause operations:
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause* soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*) allocate and default initialize
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause* soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, int num) allocate and default initialize an array
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause* soap_new_req__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set required members
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause* soap_new_set__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause::soap_default(soap*) default initialize members
  /// - int soap_read__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, _wsrfbf__ResumeFailedFaultType_FaultCause*) deserialize from a stream
  /// - int soap_write__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, _wsrfbf__ResumeFailedFaultType_FaultCause*) serialize to a stream
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause* _wsrfbf__ResumeFailedFaultType_FaultCause::soap_dup(soap*) returns deep copy of _wsrfbf__ResumeFailedFaultType_FaultCause, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
  /// - _wsrfbf__ResumeFailedFaultType_FaultCause::soap_del() deep deletes _wsrfbf__ResumeFailedFaultType_FaultCause data members, use only after _wsrfbf__ResumeFailedFaultType_FaultCause::soap_dup(NULL) (use soapcpp2 -Ed)
  /// - int _wsrfbf__ResumeFailedFaultType_FaultCause::soap_type() returns SOAP_TYPE__wsrfbf__ResumeFailedFaultType_FaultCause or derived type identifier
      class _wsrfbf__ResumeFailedFaultType_FaultCause
      { public:
  /// <any namespace="##other" minOccurs="1" maxOccurs="1">
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this element.
  ///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
  ///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
      xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
      }                                   *FaultCause                     0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note class wstop__TopicNamespaceType operations:
/// - wstop__TopicNamespaceType* soap_new_wstop__TopicNamespaceType(soap*) allocate and default initialize
/// - wstop__TopicNamespaceType* soap_new_wstop__TopicNamespaceType(soap*, int num) allocate and default initialize an array
/// - wstop__TopicNamespaceType* soap_new_req_wstop__TopicNamespaceType(soap*, ...) allocate, set required members
/// - wstop__TopicNamespaceType* soap_new_set_wstop__TopicNamespaceType(soap*, ...) allocate, set all public members
/// - wstop__TopicNamespaceType::soap_default(soap*) default initialize members
/// - int soap_read_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) deserialize from a stream
/// - int soap_write_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) serialize to a stream
/// - wstop__TopicNamespaceType* wstop__TopicNamespaceType::soap_dup(soap*) returns deep copy of wstop__TopicNamespaceType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__TopicNamespaceType::soap_del() deep deletes wstop__TopicNamespaceType data members, use only after wstop__TopicNamespaceType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__TopicNamespaceType::soap_type() returns SOAP_TYPE_wstop__TopicNamespaceType or derived type identifier
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented {
 public:
  /*  INHERITED FROM wstop__ExtensibleDocumented:
  /// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
      wstop__Documentation*                documentation                  0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Vector of Topic of length 0..unbounded.
  std::vector<
/// @note class _wstop__TopicNamespaceType_Topic operations:
/// - _wstop__TopicNamespaceType_Topic* soap_new__wstop__TopicNamespaceType_Topic(soap*) allocate and default initialize
/// - _wstop__TopicNamespaceType_Topic* soap_new__wstop__TopicNamespaceType_Topic(soap*, int num) allocate and default initialize an array
/// - _wstop__TopicNamespaceType_Topic* soap_new_req__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set required members
/// - _wstop__TopicNamespaceType_Topic* soap_new_set__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set all public members
/// - _wstop__TopicNamespaceType_Topic::soap_default(soap*) default initialize members
/// - int soap_read__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a stream
/// - int soap_write__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) serialize to a stream
/// - _wstop__TopicNamespaceType_Topic* _wstop__TopicNamespaceType_Topic::soap_dup(soap*) returns deep copy of _wstop__TopicNamespaceType_Topic, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _wstop__TopicNamespaceType_Topic::soap_del() deep deletes _wstop__TopicNamespaceType_Topic data members, use only after _wstop__TopicNamespaceType_Topic::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _wstop__TopicNamespaceType_Topic::soap_type() returns SOAP_TYPE__wstop__TopicNamespaceType_Topic or derived type identifier
  class _wstop__TopicNamespaceType_Topic {
   public:
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
    std::vector<wstop__TopicType*      > Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
    @ xsd__NCName                          name                           1;	///< Required attribute.
    @    xsd__QName

    *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
    @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
    @ wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
  }>                                   Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of type xs:anyURI.
  @ xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of type xs:boolean.
  @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note class wstop__TopicType operations:
/// - wstop__TopicType* soap_new_wstop__TopicType(soap*) allocate and default initialize
/// - wstop__TopicType* soap_new_wstop__TopicType(soap*, int num) allocate and default initialize an array
/// - wstop__TopicType* soap_new_req_wstop__TopicType(soap*, ...) allocate, set required members
/// - wstop__TopicType* soap_new_set_wstop__TopicType(soap*, ...) allocate, set all public members
/// - wstop__TopicType::soap_default(soap*) default initialize members
/// - int soap_read_wstop__TopicType(soap*, wstop__TopicType*) deserialize from a stream
/// - int soap_write_wstop__TopicType(soap*, wstop__TopicType*) serialize to a stream
/// - wstop__TopicType* wstop__TopicType::soap_dup(soap*) returns deep copy of wstop__TopicType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__TopicType::soap_del() deep deletes wstop__TopicType data members, use only after wstop__TopicType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__TopicType::soap_type() returns SOAP_TYPE_wstop__TopicType or derived type identifier
class wstop__TopicType : public wstop__ExtensibleDocumented {
 public:
  /*  INHERITED FROM wstop__ExtensibleDocumented:
  /// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
      wstop__Documentation*                documentation                  0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
  wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
  std::vector<wstop__TopicType*      > Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
  @    xsd__QName

  *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note class wstop__TopicSetType operations:
/// - wstop__TopicSetType* soap_new_wstop__TopicSetType(soap*) allocate and default initialize
/// - wstop__TopicSetType* soap_new_wstop__TopicSetType(soap*, int num) allocate and default initialize an array
/// - wstop__TopicSetType* soap_new_req_wstop__TopicSetType(soap*, ...) allocate, set required members
/// - wstop__TopicSetType* soap_new_set_wstop__TopicSetType(soap*, ...) allocate, set all public members
/// - wstop__TopicSetType::soap_default(soap*) default initialize members
/// - int soap_read_wstop__TopicSetType(soap*, wstop__TopicSetType*) deserialize from a stream
/// - int soap_write_wstop__TopicSetType(soap*, wstop__TopicSetType*) serialize to a stream
/// - wstop__TopicSetType* wstop__TopicSetType::soap_dup(soap*) returns deep copy of wstop__TopicSetType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wstop__TopicSetType::soap_del() deep deletes wstop__TopicSetType data members, use only after wstop__TopicSetType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wstop__TopicSetType::soap_type() returns SOAP_TYPE_wstop__TopicSetType or derived type identifier
class wstop__TopicSetType : public wstop__ExtensibleDocumented {
 public:
  /*  INHERITED FROM wstop__ExtensibleDocumented:
  /// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
      wstop__Documentation*                documentation                  0;	///< Optional element.
  /// <anyAttribute namespace="##other">.
  /// @note Schema extensibility is user-definable.
  ///       Consult the protocol documentation to change or insert declarations.
  ///       Use wsdl2h option -x to remove this attribute.
  ///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
    @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
      END OF INHERITED FROM wstop__ExtensibleDocumented */
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tev  service name:	PullPointSubscriptionBinding
//gsoap tev  service type:	PullPointSubscription
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref PullPointSubscriptionBinding

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__Unsubscribe

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__AddEventBroker

  - @ref __tev__DeleteEventBroker

  - @ref __tev__GetEventBrokers

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe_

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe__

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Default endpoints of Binding "PullPointSubscriptionBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
mutable struct SOAP_ENV__Detail {
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Catch any attribute content in DOM.
/// SOAP Fault message "InvalidFilterFault" part "InvalidFilterFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault".
  wsnt__InvalidFilterFaultType*        wsnt__InvalidFilterFault      ;
/// SOAP Fault message "InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault".
  wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
/// SOAP Fault message "InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault".
  wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
/// SOAP Fault message "InvalidTopicExpressionFault" part "InvalidTopicExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault".
  wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
/// SOAP Fault message "MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault" element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault".
  wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
/// SOAP Fault message "NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault" element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault".
  wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
/// SOAP Fault message "NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault".
  wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
/// SOAP Fault message "PauseFailedFault" part "PauseFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault".
  wsnt__PauseFailedFaultType*          wsnt__PauseFailedFault        ;
/// SOAP Fault message "PullMessagesFaultResponse" part "parameters" element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse".
  _tev__PullMessagesFaultResponse*     tev__PullMessagesFaultResponse;
/// SOAP Fault message "ResourceUnknownFault" part "ResourceUnknownFault" element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault".
  wsrfr__ResourceUnknownFaultType*     wsrfr__ResourceUnknownFault   ;
/// SOAP Fault message "ResumeFailedFault" part "ResumeFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault".
  wsnt__ResumeFailedFaultType*         wsnt__ResumeFailedFault       ;
/// SOAP Fault message "SubscribeCreationFailedFault" part "SubscribeCreationFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault".
  wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
/// SOAP Fault message "TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault".
  wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
/// SOAP Fault message "TopicNotSupportedFault" part "TopicNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault".
  wsnt__TopicNotSupportedFaultType*    wsnt__TopicNotSupportedFault  ;
/// SOAP Fault message "UnableToCreatePullPointFault" part "UnableToCreatePullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault".
  wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
/// SOAP Fault message "UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault".
  wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
/// SOAP Fault message "UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault".
  wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
/// SOAP Fault message "UnableToGetMessagesFault" part "UnableToGetMessagesFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault".
  wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
/// SOAP Fault message "UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault".
  wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
/// SOAP Fault message "UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault".
  wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
/// SOAP Fault message "UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault".
  wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
/// SOAP Fault message "UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault".
  wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
  int                                  __type                        ;	///< set to SOAP_TYPE_T for a serializable type T
  void                                *fault                         ;	///< points to serializable value of type T or NULL
  _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding".
				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse"

  - Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)
    - Output Fault addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages/Fault/PullMessagesFaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse         &tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse         &tev__PullMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
//gsoap tev  service method-fault-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages/Fault/PullMessagesFaultResponse
int __tev__PullMessages(
  _tev__PullMessages*                 tev__PullMessages,	///< Input parameter
  _tev__PullMessagesResponse         &tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding".
				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.


  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse                 &tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse                 &tev__SeekResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekResponse
int __tev__Seek(
  _tev__Seek*                         tev__Seek,	///< Input parameter
  _tev__SeekResponse                 &tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.


  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse
int __tev__SetSynchronizationPoint(
  _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,	///< Input parameter
  _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding".
The device shall provide the following Unsubscribe command for all SubscriptionManager
endpoints returned by the CreatePullPointSubscription command.<br/>
				This command shall terminate the lifetime of a pull
point.


  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
  _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
  _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse
int __tev__GetServiceCapabilities(
  _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,	///< Input parameter
  _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
  _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,	///< Input parameter
  _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse
int __tev__GetEventProperties(
  _tev__GetEventProperties*           tev__GetEventProperties,	///< Input parameter
  _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__AddEventBroker                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__AddEventBroker" of service binding "PullPointSubscriptionBinding".
The AddEventBroker command allows an ONVIF client to add an event broker configuration
to device to enable ONVIF events to be transferred to an event broker. If an existing
event broker configuration already exists with the same Address, the existing configuration
shall be modified.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__AddEventBroker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__AddEventBroker*               tev__AddEventBroker,
    // output parameters:
    _tev__AddEventBrokerResponse       &tev__AddEventBrokerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__AddEventBroker(
    struct soap *soap,
    // input parameters:
    _tev__AddEventBroker*               tev__AddEventBroker,
    // output parameters:
    _tev__AddEventBrokerResponse       &tev__AddEventBrokerResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	AddEventBroker SOAP
//gsoap tev  service method-style:	AddEventBroker document
//gsoap tev  service method-encoding:	AddEventBroker literal
//gsoap tev  service method-input-action:	AddEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest
//gsoap tev  service method-output-action:	AddEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequestResponse
int __tev__AddEventBroker(
  _tev__AddEventBroker*               tev__AddEventBroker,	///< Input parameter
  _tev__AddEventBrokerResponse       &tev__AddEventBrokerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DeleteEventBroker                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DeleteEventBroker" of service binding "PullPointSubscriptionBinding".
The DeleteEventBroker allows an ONVIF client to delete an event broker configuration
from an ONVIF device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DeleteEventBroker(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__DeleteEventBroker*            tev__DeleteEventBroker,
    // output parameters:
    _tev__DeleteEventBrokerResponse    &tev__DeleteEventBrokerResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DeleteEventBroker(
    struct soap *soap,
    // input parameters:
    _tev__DeleteEventBroker*            tev__DeleteEventBroker,
    // output parameters:
    _tev__DeleteEventBrokerResponse    &tev__DeleteEventBrokerResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	DeleteEventBroker SOAP
//gsoap tev  service method-style:	DeleteEventBroker document
//gsoap tev  service method-encoding:	DeleteEventBroker literal
//gsoap tev  service method-input-action:	DeleteEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest
//gsoap tev  service method-output-action:	DeleteEventBroker http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequestResponse
int __tev__DeleteEventBroker(
  _tev__DeleteEventBroker*            tev__DeleteEventBroker,	///< Input parameter
  _tev__DeleteEventBrokerResponse    &tev__DeleteEventBrokerResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventBrokers                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetEventBrokers" of service binding "PullPointSubscriptionBinding".
The GetEventBrokers command lets a client retrieve event broker configurations from
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventBrokers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetEventBrokers*              tev__GetEventBrokers,
    // output parameters:
    _tev__GetEventBrokersResponse      &tev__GetEventBrokersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventBrokers(
    struct soap *soap,
    // input parameters:
    _tev__GetEventBrokers*              tev__GetEventBrokers,
    // output parameters:
    _tev__GetEventBrokersResponse      &tev__GetEventBrokersResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetEventBrokers SOAP
//gsoap tev  service method-style:	GetEventBrokers document
//gsoap tev  service method-encoding:	GetEventBrokers literal
//gsoap tev  service method-input-action:	GetEventBrokers http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest
//gsoap tev  service method-output-action:	GetEventBrokers http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequestResponse
int __tev__GetEventBrokers(
  _tev__GetEventBrokers*              tev__GetEventBrokers,	///< Input parameter
  _tev__GetEventBrokersResponse      &tev__GetEventBrokersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
  _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
  _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
  _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
  _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
  _wsnt__Subscribe*                   wsnt__Subscribe,	///< Input parameter
  _wsnt__SubscribeResponse           &wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
  _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,	///< Input parameter
  _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
  _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
  void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
  _wsnt__GetMessages*                 wsnt__GetMessages,	///< Input parameter
  _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
  _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,	///< Input parameter
  _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
  _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
  void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
  _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,	///< Input parameter
  _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse               &wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
  _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
  _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe__                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__Unsubscribe__" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe__(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe__(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe__ SOAP
//gsoap tev  service method-style:	Unsubscribe__ document
//gsoap tev  service method-encoding:	Unsubscribe__ literal
//gsoap tev  service method-input-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe__ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe__ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe__(
  _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
  _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
  _wsnt__PauseSubscription*           wsnt__PauseSubscription,	///< Input parameter
  _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h generated with soapcpp2):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
  _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,	///< Input parameter
  _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <tev:GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilities(struct soap*, const char *URL, _tev__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilities(struct soap*, const char *URL, _tev__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilities(struct soap*, const char *URL, _tev__GetServiceCapabilities*);
    soap_POST_recv__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    @endcode

  - <tev:GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tev__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tev__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tev__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <tev:Capabilities> (use wsdl2h option -g to auto-generate type _tev__Capabilities)

  - <tev:CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscription(struct soap*, const char *URL, _tev__CreatePullPointSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscription(struct soap*, const char *URL, _tev__CreatePullPointSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscription(struct soap*, const char *URL, _tev__CreatePullPointSubscription*);
    soap_POST_recv__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    @endcode

  - <tev:CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, _tev__CreatePullPointSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, _tev__CreatePullPointSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__CreatePullPointSubscriptionResponse(struct soap*, const char *URL, _tev__CreatePullPointSubscriptionResponse*);
    soap_POST_recv__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <tev:PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, _tev__PullMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessages(struct soap*, const char *URL, _tev__PullMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessages(struct soap*, const char *URL, _tev__PullMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessages(struct soap*, const char *URL, _tev__PullMessages*);
    soap_POST_recv__tev__PullMessages(struct soap*, _tev__PullMessages*);
    @endcode

  - <tev:PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesResponse(struct soap*, const char *URL, _tev__PullMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesResponse(struct soap*, const char *URL, _tev__PullMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesResponse(struct soap*, const char *URL, _tev__PullMessagesResponse*);
    soap_POST_recv__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    @endcode

  - <tev:PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__PullMessagesFaultResponse(struct soap*, const char *URL, _tev__PullMessagesFaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__PullMessagesFaultResponse(struct soap*, const char *URL, _tev__PullMessagesFaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__PullMessagesFaultResponse(struct soap*, const char *URL, _tev__PullMessagesFaultResponse*);
    soap_POST_recv__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    @endcode

  - <tev:Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, _tev__Seek*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__Seek(struct soap*, const char *URL, _tev__Seek*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__Seek(struct soap*, const char *URL, _tev__Seek*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__Seek(struct soap*, const char *URL, _tev__Seek*);
    soap_POST_recv__tev__Seek(struct soap*, _tev__Seek*);
    @endcode

  - <tev:SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SeekResponse(struct soap*, const char *URL, _tev__SeekResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SeekResponse(struct soap*, const char *URL, _tev__SeekResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SeekResponse(struct soap*, const char *URL, _tev__SeekResponse*);
    soap_POST_recv__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    @endcode

  - <tev:SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPoint(struct soap*, const char *URL, _tev__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPoint(struct soap*, const char *URL, _tev__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPoint(struct soap*, const char *URL, _tev__SetSynchronizationPoint*);
    soap_POST_recv__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    @endcode

  - <tev:SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, _tev__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, _tev__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__SetSynchronizationPointResponse(struct soap*, const char *URL, _tev__SetSynchronizationPointResponse*);
    soap_POST_recv__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    @endcode

  - <tev:GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventProperties(struct soap*, const char *URL, _tev__GetEventProperties*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventProperties(struct soap*, const char *URL, _tev__GetEventProperties*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventProperties(struct soap*, const char *URL, _tev__GetEventProperties*);
    soap_POST_recv__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    @endcode

  - <tev:GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventPropertiesResponse(struct soap*, const char *URL, _tev__GetEventPropertiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventPropertiesResponse(struct soap*, const char *URL, _tev__GetEventPropertiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventPropertiesResponse(struct soap*, const char *URL, _tev__GetEventPropertiesResponse*);
    soap_POST_recv__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    @endcode

  - <tev:ChangedOnly> @ref _tev__ChangedOnly
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__ChangedOnly(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__ChangedOnly(struct soap*, _XML);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__ChangedOnly(struct soap*, const char *URL, _XML);
    soap_POST_recv__tev__ChangedOnly(struct soap*, _XML);
    @endcode

  - <tev:AddEventBroker> @ref _tev__AddEventBroker
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__AddEventBroker(struct soap*, const char *URL, _tev__AddEventBroker*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__AddEventBroker(struct soap*, const char *URL, _tev__AddEventBroker*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__AddEventBroker(struct soap*, const char *URL, _tev__AddEventBroker*);
    soap_POST_recv__tev__AddEventBroker(struct soap*, _tev__AddEventBroker*);
    @endcode

  - <tev:AddEventBrokerResponse> @ref _tev__AddEventBrokerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__AddEventBrokerResponse(struct soap*, const char *URL, _tev__AddEventBrokerResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__AddEventBrokerResponse(struct soap*, const char *URL, _tev__AddEventBrokerResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__AddEventBrokerResponse(struct soap*, const char *URL, _tev__AddEventBrokerResponse*);
    soap_POST_recv__tev__AddEventBrokerResponse(struct soap*, _tev__AddEventBrokerResponse*);
    @endcode

  - <tev:DeleteEventBroker> @ref _tev__DeleteEventBroker
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__DeleteEventBroker(struct soap*, const char *URL, _tev__DeleteEventBroker*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__DeleteEventBroker(struct soap*, const char *URL, _tev__DeleteEventBroker*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__DeleteEventBroker(struct soap*, const char *URL, _tev__DeleteEventBroker*);
    soap_POST_recv__tev__DeleteEventBroker(struct soap*, _tev__DeleteEventBroker*);
    @endcode

  - <tev:DeleteEventBrokerResponse> @ref _tev__DeleteEventBrokerResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, _tev__DeleteEventBrokerResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, _tev__DeleteEventBrokerResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__DeleteEventBrokerResponse(struct soap*, const char *URL, _tev__DeleteEventBrokerResponse*);
    soap_POST_recv__tev__DeleteEventBrokerResponse(struct soap*, _tev__DeleteEventBrokerResponse*);
    @endcode

  - <tev:GetEventBrokers> @ref _tev__GetEventBrokers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventBrokers(struct soap*, const char *URL, _tev__GetEventBrokers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventBrokers(struct soap*, const char *URL, _tev__GetEventBrokers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventBrokers(struct soap*, const char *URL, _tev__GetEventBrokers*);
    soap_POST_recv__tev__GetEventBrokers(struct soap*, _tev__GetEventBrokers*);
    @endcode

  - <tev:GetEventBrokersResponse> @ref _tev__GetEventBrokersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tev__GetEventBrokersResponse(struct soap*, const char *URL, _tev__GetEventBrokersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tev__GetEventBrokersResponse(struct soap*, const char *URL, _tev__GetEventBrokersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tev__GetEventBrokersResponse(struct soap*, const char *URL, _tev__GetEventBrokersResponse*);
    soap_POST_recv__tev__GetEventBrokersResponse(struct soap*, _tev__GetEventBrokersResponse*);
    @endcode

*/

/**

@section  Top-level root elements of schema ""

*/

/**

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

*/

/**

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <wsrfr:ResourceUnknownFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnknownFault)

  - <wsrfr:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnavailableFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__NotificationProducerRP(struct soap*, const char *URL, _wsnt__NotificationProducerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__NotificationProducerRP(struct soap*, const char *URL, _wsnt__NotificationProducerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__NotificationProducerRP(struct soap*, const char *URL, _wsnt__NotificationProducerRP*);
    soap_POST_recv__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, _wsnt__SubscriptionManagerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, _wsnt__SubscriptionManagerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, _wsnt__SubscriptionManagerRP*);
    soap_POST_recv__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Notify(struct soap*, const char *URL, _wsnt__Notify*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Notify(struct soap*, const char *URL, _wsnt__Notify*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Notify(struct soap*, const char *URL, _wsnt__Notify*);
    soap_POST_recv__wsnt__Notify(struct soap*, _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UseRaw(struct soap*, const char *URL, _wsnt__UseRaw*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UseRaw(struct soap*, const char *URL, _wsnt__UseRaw*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UseRaw(struct soap*, const char *URL, _wsnt__UseRaw*);
    soap_POST_recv__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Subscribe(struct soap*, const char *URL, _wsnt__Subscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Subscribe(struct soap*, const char *URL, _wsnt__Subscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Subscribe(struct soap*, const char *URL, _wsnt__Subscribe*);
    soap_POST_recv__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscribeResponse(struct soap*, const char *URL, _wsnt__SubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscribeResponse(struct soap*, const char *URL, _wsnt__SubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscribeResponse(struct soap*, const char *URL, _wsnt__SubscribeResponse*);
    soap_POST_recv__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessage(struct soap*, const char *URL, _wsnt__GetCurrentMessage*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessage(struct soap*, const char *URL, _wsnt__GetCurrentMessage*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessage(struct soap*, const char *URL, _wsnt__GetCurrentMessage*);
    soap_POST_recv__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, _wsnt__GetCurrentMessageResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, _wsnt__GetCurrentMessageResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, _wsnt__GetCurrentMessageResponse*);
    soap_POST_recv__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessages(struct soap*, const char *URL, _wsnt__GetMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessages(struct soap*, const char *URL, _wsnt__GetMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessages(struct soap*, const char *URL, _wsnt__GetMessages*);
    soap_POST_recv__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessagesResponse(struct soap*, const char *URL, _wsnt__GetMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessagesResponse(struct soap*, const char *URL, _wsnt__GetMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessagesResponse(struct soap*, const char *URL, _wsnt__GetMessagesResponse*);
    soap_POST_recv__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPoint(struct soap*, const char *URL, _wsnt__DestroyPullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPoint(struct soap*, const char *URL, _wsnt__DestroyPullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPoint(struct soap*, const char *URL, _wsnt__DestroyPullPoint*);
    soap_POST_recv__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, _wsnt__DestroyPullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, _wsnt__DestroyPullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, _wsnt__DestroyPullPointResponse*);
    soap_POST_recv__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPoint(struct soap*, const char *URL, _wsnt__CreatePullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPoint(struct soap*, const char *URL, _wsnt__CreatePullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPoint(struct soap*, const char *URL, _wsnt__CreatePullPoint*);
    soap_POST_recv__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPointResponse(struct soap*, const char *URL, _wsnt__CreatePullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPointResponse(struct soap*, const char *URL, _wsnt__CreatePullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPointResponse(struct soap*, const char *URL, _wsnt__CreatePullPointResponse*);
    soap_POST_recv__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Renew(struct soap*, const char *URL, _wsnt__Renew*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Renew(struct soap*, const char *URL, _wsnt__Renew*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Renew(struct soap*, const char *URL, _wsnt__Renew*);
    soap_POST_recv__wsnt__Renew(struct soap*, _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__RenewResponse(struct soap*, const char *URL, _wsnt__RenewResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__RenewResponse(struct soap*, const char *URL, _wsnt__RenewResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__RenewResponse(struct soap*, const char *URL, _wsnt__RenewResponse*);
    soap_POST_recv__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Unsubscribe(struct soap*, const char *URL, _wsnt__Unsubscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Unsubscribe(struct soap*, const char *URL, _wsnt__Unsubscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Unsubscribe(struct soap*, const char *URL, _wsnt__Unsubscribe*);
    soap_POST_recv__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UnsubscribeResponse(struct soap*, const char *URL, _wsnt__UnsubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UnsubscribeResponse(struct soap*, const char *URL, _wsnt__UnsubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UnsubscribeResponse(struct soap*, const char *URL, _wsnt__UnsubscribeResponse*);
    soap_POST_recv__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscription(struct soap*, const char *URL, _wsnt__PauseSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscription(struct soap*, const char *URL, _wsnt__PauseSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscription(struct soap*, const char *URL, _wsnt__PauseSubscription*);
    soap_POST_recv__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, _wsnt__PauseSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, _wsnt__PauseSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, _wsnt__PauseSubscriptionResponse*);
    soap_POST_recv__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscription(struct soap*, const char *URL, _wsnt__ResumeSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscription(struct soap*, const char *URL, _wsnt__ResumeSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscription(struct soap*, const char *URL, _wsnt__ResumeSubscription*);
    soap_POST_recv__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, _wsnt__ResumeSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, _wsnt__ResumeSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, _wsnt__ResumeSubscriptionResponse*);
    soap_POST_recv__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/* End of /home/jbennett/src/zoneminder/build/generated/bindings.h */
#import "wsse.h"
#import "struct_timeval.h"
#import "wsa5.h"
